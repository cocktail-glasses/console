/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes CRD Swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError, operationServerMap } from './base';

/**
 * DataStore is the Schema for the datastores API.
 * @export
 * @interface IoClastixKamajiV1alpha1DataStore
 */
export interface IoClastixKamajiV1alpha1DataStore {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStore
     */
    'apiVersion'?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStore
     */
    'kind'?: string;
    /**
     * Standard object\'s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof IoClastixKamajiV1alpha1DataStore
     */
    'metadata'?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpec}
     * @memberof IoClastixKamajiV1alpha1DataStore
     */
    'spec'?: IoClastixKamajiV1alpha1DataStoreSpec;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreStatus}
     * @memberof IoClastixKamajiV1alpha1DataStore
     */
    'status'?: IoClastixKamajiV1alpha1DataStoreStatus;
}
/**
 * DataStoreList is a list of DataStore
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreList
 */
export interface IoClastixKamajiV1alpha1DataStoreList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStoreList
     */
    'apiVersion'?: string;
    /**
     * List of datastores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
     * @type {Array<IoClastixKamajiV1alpha1DataStore>}
     * @memberof IoClastixKamajiV1alpha1DataStoreList
     */
    'items': Array<IoClastixKamajiV1alpha1DataStore>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStoreList
     */
    'kind'?: string;
    /**
     * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof IoClastixKamajiV1alpha1DataStoreList
     */
    'metadata'?: IoK8sApimachineryPkgApisMetaV1ListMeta;
}
/**
 * DataStoreSpec defines the desired state of DataStore.
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreSpec
 */
export interface IoClastixKamajiV1alpha1DataStoreSpec {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuth}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpec
     */
    'basicAuth'?: IoClastixKamajiV1alpha1DataStoreSpecBasicAuth;
    /**
     * The driver to use to connect to the shared datastore.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpec
     */
    'driver': IoClastixKamajiV1alpha1DataStoreSpecDriverEnum;
    /**
     * List of the endpoints to connect to the shared datastore. No need for protocol, just bare IP/FQDN and port.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpec
     */
    'endpoints': Array<string>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecTlsConfig}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpec
     */
    'tlsConfig'?: IoClastixKamajiV1alpha1DataStoreSpecTlsConfig;
}

export const IoClastixKamajiV1alpha1DataStoreSpecDriverEnum = {
    Etcd: 'etcd',
    MySql: 'MySQL',
    PostgreSql: 'PostgreSQL',
    Nats: 'NATS'
} as const;

export type IoClastixKamajiV1alpha1DataStoreSpecDriverEnum = typeof IoClastixKamajiV1alpha1DataStoreSpecDriverEnum[keyof typeof IoClastixKamajiV1alpha1DataStoreSpecDriverEnum];

/**
 * In case of authentication enabled for the given data store, specifies the username and password pair. This value is optional.
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreSpecBasicAuth
 */
export interface IoClastixKamajiV1alpha1DataStoreSpecBasicAuth {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecBasicAuth
     */
    'password': IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecBasicAuth
     */
    'username': IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword
 */
export interface IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword {
    /**
     * Bare content of the file, base64 encoded. It has precedence over the SecretReference value.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword
     */
    'content'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPasswordSecretReference}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword
     */
    'secretReference'?: IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPasswordSecretReference;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPasswordSecretReference
 */
export interface IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPasswordSecretReference {
    /**
     * Name of the key for the given Secret reference where the content is stored. This value is mandatory.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPasswordSecretReference
     */
    'keyPath': string;
    /**
     * name is unique within a namespace to reference a secret resource.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPasswordSecretReference
     */
    'name'?: string;
    /**
     * namespace defines the space within which the secret name must be unique.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPasswordSecretReference
     */
    'namespace'?: string;
}
/**
 * Defines the TLS/SSL configuration required to connect to the data store in a secure way. This value is optional.
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreSpecTlsConfig
 */
export interface IoClastixKamajiV1alpha1DataStoreSpecTlsConfig {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecTlsConfigCertificateAuthority}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecTlsConfig
     */
    'certificateAuthority': IoClastixKamajiV1alpha1DataStoreSpecTlsConfigCertificateAuthority;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecTlsConfigClientCertificate}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecTlsConfig
     */
    'clientCertificate'?: IoClastixKamajiV1alpha1DataStoreSpecTlsConfigClientCertificate;
}
/**
 * Retrieve the Certificate Authority certificate and private key, such as bare content of the file, or a SecretReference. The key reference is required since etcd authentication is based on certificates, and Kamaji is responsible in creating this.
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreSpecTlsConfigCertificateAuthority
 */
export interface IoClastixKamajiV1alpha1DataStoreSpecTlsConfigCertificateAuthority {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecTlsConfigCertificateAuthority
     */
    'certificate': IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecTlsConfigCertificateAuthority
     */
    'privateKey'?: IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword;
}
/**
 * Specifies the SSL/TLS key and private key pair used to connect to the data store.
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreSpecTlsConfigClientCertificate
 */
export interface IoClastixKamajiV1alpha1DataStoreSpecTlsConfigClientCertificate {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecTlsConfigClientCertificate
     */
    'certificate': IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword}
     * @memberof IoClastixKamajiV1alpha1DataStoreSpecTlsConfigClientCertificate
     */
    'privateKey': IoClastixKamajiV1alpha1DataStoreSpecBasicAuthPassword;
}
/**
 * DataStoreStatus defines the observed state of DataStore.
 * @export
 * @interface IoClastixKamajiV1alpha1DataStoreStatus
 */
export interface IoClastixKamajiV1alpha1DataStoreStatus {
    /**
     * List of the Tenant Control Planes, namespaced named, using this data store.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1DataStoreStatus
     */
    'usedBy'?: Array<string>;
}
/**
 * TenantControlPlane is the Schema for the tenantcontrolplanes API.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlane
 */
export interface IoClastixKamajiV1alpha1TenantControlPlane {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlane
     */
    'apiVersion'?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlane
     */
    'kind'?: string;
    /**
     * Standard object\'s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlane
     */
    'metadata'?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpec}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlane
     */
    'spec'?: IoClastixKamajiV1alpha1TenantControlPlaneSpec;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatus}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlane
     */
    'status'?: IoClastixKamajiV1alpha1TenantControlPlaneStatus;
}
/**
 * TenantControlPlaneList is a list of TenantControlPlane
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneList
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneList
     */
    'apiVersion'?: string;
    /**
     * List of tenantcontrolplanes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlane>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneList
     */
    'items': Array<IoClastixKamajiV1alpha1TenantControlPlane>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneList
     */
    'kind'?: string;
    /**
     * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneList
     */
    'metadata'?: IoK8sApimachineryPkgApisMetaV1ListMeta;
}
/**
 * TenantControlPlaneSpec defines the desired state of TenantControlPlane.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpec
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpec {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecAddons}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpec
     */
    'addons'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddons;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlane}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpec
     */
    'controlPlane': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlane;
    /**
     * DataStore allows to specify a DataStore that should be used to store the Kubernetes data for the given Tenant Control Plane. This parameter is optional and acts as an override over the default one which is used by the Kamaji Operator. Migration from a different DataStore to another one is not yet supported and the reconciliation will be blocked.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpec
     */
    'dataStore'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetes}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpec
     */
    'kubernetes': IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetes;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpec
     */
    'networkProfile'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile;
}
/**
 * Addons contain which addons are enabled
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddons
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddons {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsCoreDNS}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddons
     */
    'coreDNS'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsCoreDNS;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivity}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddons
     */
    'konnectivity'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivity;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKubeProxy}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddons
     */
    'kubeProxy'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKubeProxy;
}
/**
 * Enables the DNS addon in the Tenant Cluster. The registry and the tag are configurable, the image is hard-coded to `coredns`.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsCoreDNS
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsCoreDNS {
    /**
     * ImageRepository sets the container registry to pull images from. if not set, the default ImageRepository will be used instead.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsCoreDNS
     */
    'imageRepository'?: string;
    /**
     * ImageTag allows to specify a tag for the image. In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsCoreDNS
     */
    'imageTag'?: string;
}
/**
 * Enables the Konnectivity addon in the Tenant Cluster, required if the worker nodes are in a different network.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivity
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivity {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivity
     */
    'agent'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivity
     */
    'server'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent {
    /**
     * ExtraArgs allows adding additional arguments to said component. WARNING - This option can override existing konnectivity parameters and cause konnectivity components to misbehave in unxpected ways. Only modify if you know what you are doing.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent
     */
    'extraArgs'?: Array<string>;
    /**
     * AgentImage defines the container image for Konnectivity\'s agent.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent
     */
    'image'?: string;
    /**
     * Tolerations for the deployed agent. Can be customized to start the konnectivity-agent even if the nodes are not ready or tainted.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent
     */
    'tolerations'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner>;
    /**
     * Version for Konnectivity agent.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgent
     */
    'version'?: string;
}
/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner {
    /**
     * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner
     */
    'effect'?: string;
    /**
     * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner
     */
    'key'?: string;
    /**
     * Operator represents a key\'s relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner
     */
    'operator'?: string;
    /**
     * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner
     */
    'tolerationSeconds'?: number;
    /**
     * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner
     */
    'value'?: string;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer {
    /**
     * ExtraArgs allows adding additional arguments to said component. WARNING - This option can override existing konnectivity parameters and cause konnectivity components to misbehave in unxpected ways. Only modify if you know what you are doing.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer
     */
    'extraArgs'?: Array<string>;
    /**
     * Container image used by the Konnectivity server.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer
     */
    'image'?: string;
    /**
     * The port which Konnectivity server is listening to.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer
     */
    'port': number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResources}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer
     */
    'resources'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResources;
    /**
     * Container image version of the Konnectivity server.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServer
     */
    'version'?: string;
}
/**
 * Resources define the amount of CPU and memory to allocate to the Konnectivity server.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResources
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResources {
    /**
     * Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResources
     */
    'claims'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>;
    /**
     * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResources
     */
    'limits'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
    /**
     * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResources
     */
    'requests'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
}
/**
 * ResourceClaim references one entry in PodSpec.ResourceClaims.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner {
    /**
     * Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue {
}
/**
 * Enables the kube-proxy addon in the Tenant Cluster. The registry and the tag are configurable, the image is hard-coded to `kube-proxy`.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKubeProxy
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKubeProxy {
    /**
     * ImageRepository sets the container registry to pull images from. if not set, the default ImageRepository will be used instead.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKubeProxy
     */
    'imageRepository'?: string;
    /**
     * ImageTag allows to specify a tag for the image. In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKubeProxy
     */
    'imageTag'?: string;
}
/**
 * ControlPlane defines how the Tenant Control Plane Kubernetes resources must be created in the Admin Cluster, such as the number of Pod replicas, the Service resource, or the Ingress.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlane
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlane {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlane
     */
    'deployment'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneIngress}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlane
     */
    'ingress'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneIngress;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneService}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlane
     */
    'service': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneService;
}
/**
 * Defining the options for the deployed Tenant Control Plane as Deployment resource.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment {
    /**
     * AdditionalContainers allows adding additional containers to the Control Plane deployment.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'additionalContainers'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner>;
    /**
     * AdditionalInitContainers allows adding additional init containers to the Control Plane deployment.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'additionalInitContainers'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'additionalMetadata'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumeMounts}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'additionalVolumeMounts'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumeMounts;
    /**
     * AdditionalVolumes allows to add additional volumes to the Control Plane deployment.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'additionalVolumes'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinity}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'affinity'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinity;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'extraArgs'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs;
    /**
     * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node\'s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'nodeSelector'?: { [key: string]: string; };
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'podAdditionalMetadata'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'registrySettings'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings;
    /**
     * 
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'replicas'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'resources'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources;
    /**
     * RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run the Tenant Control Plane pod. If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'runtimeClassName'?: string;
    /**
     * ServiceAccountName allows to specify the service account to be mounted to the pods of the Control plane deployment
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'serviceAccountName'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategy}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'strategy'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategy;
    /**
     * If specified, the Tenant Control Plane pod\'s tolerations. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'tolerations'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityAgentTolerationsInner>;
    /**
     * TopologySpreadConstraints describes how the Tenant Control Plane pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. In case of nil underlying LabelSelector, the Kamaji one for the given Tenant Control Plane will be used. All topologySpreadConstraints are ANDed.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeployment
     */
    'topologySpreadConstraints'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner>;
}
/**
 * A single application container that you want to run within a pod.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner {
    /**
     * Arguments to the entrypoint. The container image\'s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container\'s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'args'?: Array<string>;
    /**
     * Entrypoint array. Not executed within a shell. The container image\'s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container\'s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'command'?: Array<string>;
    /**
     * List of environment variables to set in the container. Cannot be updated.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'env'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInner>;
    /**
     * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'envFrom'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInner>;
    /**
     * Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'image'?: string;
    /**
     * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'imagePullPolicy'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecycle}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'lifecycle'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecycle;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'livenessProbe'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe;
    /**
     * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'name': string;
    /**
     * List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'ports'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'readinessProbe'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe;
    /**
     * Resources resize policy for the container.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResizePolicyInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'resizePolicy'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResizePolicyInner>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResources}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'resources'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResources;
    /**
     * RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is \"Always\". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod\'s restart policy and the container type. Setting the RestartPolicy as \"Always\" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down. This lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'restartPolicy'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'securityContext'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'startupProbe'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe;
    /**
     * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'stdin'?: boolean;
    /**
     * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'stdinOnce'?: boolean;
    /**
     * Optional: Path at which the file to which the container\'s termination message will be written is mounted into the container\'s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'terminationMessagePath'?: string;
    /**
     * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'terminationMessagePolicy'?: string;
    /**
     * Whether this container should allocate a TTY for itself, also requires \'stdin\' to be true. Default is false.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'tty'?: boolean;
    /**
     * volumeDevices is the list of block devices to be used by the container.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeDevicesInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'volumeDevices'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeDevicesInner>;
    /**
     * Pod volumes to mount into the container\'s filesystem. Cannot be updated.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'volumeMounts'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>;
    /**
     * Container\'s working directory. If not specified, the container runtime\'s default will be used, which might be configured in the container image. Cannot be updated.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInner
     */
    'workingDir'?: string;
}
/**
 * EnvFromSource represents the source of a set of ConfigMaps
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerConfigMapRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInner
     */
    'configMapRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerConfigMapRef;
    /**
     * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInner
     */
    'prefix'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInner
     */
    'secretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerSecretRef;
}
/**
 * The ConfigMap to select from
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerConfigMapRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerConfigMapRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerConfigMapRef
     */
    'name'?: string;
    /**
     * Specify whether the ConfigMap must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerConfigMapRef
     */
    'optional'?: boolean;
}
/**
 * The Secret to select from
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerSecretRef
     */
    'name'?: string;
    /**
     * Specify whether the Secret must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvFromInnerSecretRef
     */
    'optional'?: boolean;
}
/**
 * EnvVar represents an environment variable present in a Container.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInner {
    /**
     * Name of the environment variable. Must be a C_IDENTIFIER.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInner
     */
    'name': string;
    /**
     * Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInner
     */
    'value'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInner
     */
    'valueFrom'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom;
}
/**
 * Source for the environment variable\'s value. Cannot be used if value is not empty.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromConfigMapKeyRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom
     */
    'configMapKeyRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromConfigMapKeyRef;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromFieldRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom
     */
    'fieldRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromFieldRef;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom
     */
    'resourceFieldRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRef;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromSecretKeyRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFrom
     */
    'secretKeyRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromSecretKeyRef;
}
/**
 * Selects a key of a ConfigMap.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromConfigMapKeyRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromConfigMapKeyRef {
    /**
     * The key to select.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromConfigMapKeyRef
     */
    'key': string;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromConfigMapKeyRef
     */
    'name'?: string;
    /**
     * Specify whether the ConfigMap or its key must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromConfigMapKeyRef
     */
    'optional'?: boolean;
}
/**
 * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[\'<KEY>\']`, `metadata.annotations[\'<KEY>\']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromFieldRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromFieldRef {
    /**
     * Version of the schema the FieldPath is written in terms of, defaults to \"v1\".
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromFieldRef
     */
    'apiVersion'?: string;
    /**
     * Path of the field to select in the specified API version.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromFieldRef
     */
    'fieldPath': string;
}
/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRef {
    /**
     * Container name: required for volumes, optional for env vars
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRef
     */
    'containerName'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRefDivisor}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRef
     */
    'divisor'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRefDivisor;
    /**
     * Required: resource to select
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRef
     */
    'resource': string;
}
/**
 * Specifies the output format of the exposed resources, defaults to \"1\"
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRefDivisor
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRefDivisor {
}
/**
 * Selects a key of a secret in the pod\'s namespace
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromSecretKeyRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromSecretKeyRef {
    /**
     * The key of the secret to select from.  Must be a valid secret key.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromSecretKeyRef
     */
    'key': string;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromSecretKeyRef
     */
    'name'?: string;
    /**
     * Specify whether the Secret or its key must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromSecretKeyRef
     */
    'optional'?: boolean;
}
/**
 * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecycle
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecycle {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecycle
     */
    'postStart'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecycle
     */
    'preStop'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop;
}
/**
 * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart
     */
    'exec'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart
     */
    'httpGet'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartSleep}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart
     */
    'sleep'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartSleep;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStart
     */
    'tcpSocket'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket;
}
/**
 * Exec specifies the action to take.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec {
    /**
     * Command is the command line to execute inside the container, the working directory for the command  is root (\'/\') in the container\'s filesystem. The command is simply exec\'d, it is not run inside a shell, so traditional shell instructions (\'|\', etc) won\'t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec
     */
    'command'?: Array<string>;
}
/**
 * HTTPGet specifies the http request to perform.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet {
    /**
     * Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet
     */
    'host'?: string;
    /**
     * Custom headers to set in the request. HTTP allows repeated headers.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetHttpHeadersInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet
     */
    'httpHeaders'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetHttpHeadersInner>;
    /**
     * Path to access on the HTTP server.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet
     */
    'path'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetPort}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet
     */
    'port': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetPort;
    /**
     * Scheme to use for connecting to the host. Defaults to HTTP.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet
     */
    'scheme'?: string;
}
/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetHttpHeadersInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetHttpHeadersInner {
    /**
     * The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetHttpHeadersInner
     */
    'name': string;
    /**
     * The header field value
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetHttpHeadersInner
     */
    'value': string;
}
/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetPort
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGetPort {
}
/**
 * Sleep represents the duration that the container should sleep before being terminated.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartSleep
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartSleep {
    /**
     * Seconds is the number of seconds to sleep.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartSleep
     */
    'seconds': number;
}
/**
 * Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket {
    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket
     */
    'host'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocketPort}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket
     */
    'port': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocketPort;
}
/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocketPort
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocketPort {
}
/**
 * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod\'s termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod\'s termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop
     */
    'exec'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop
     */
    'httpGet'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartSleep}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop
     */
    'sleep'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartSleep;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePreStop
     */
    'tcpSocket'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocket;
}
/**
 * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'exec'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec;
    /**
     * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'failureThreshold'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'grpc'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'httpGet'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet;
    /**
     * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'initialDelaySeconds'?: number;
    /**
     * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'periodSeconds'?: number;
    /**
     * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'successThreshold'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'tcpSocket'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket;
    /**
     * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod\'s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'terminationGracePeriodSeconds'?: number;
    /**
     * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbe
     */
    'timeoutSeconds'?: number;
}
/**
 * GRPC specifies an action involving a GRPC port.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc {
    /**
     * Port number of the gRPC service. Number must be in the range 1 to 65535.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc
     */
    'port': number;
    /**
     * Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc
     */
    'service'?: string;
}
/**
 * TCPSocket specifies an action involving a TCP port.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket {
    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket
     */
    'host'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocketPort}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket
     */
    'port': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartTcpSocketPort;
}
/**
 * ContainerPort represents a network port in a single container.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner {
    /**
     * Number of port to expose on the pod\'s IP address. This must be a valid port number, 0 < x < 65536.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner
     */
    'containerPort': number;
    /**
     * What host IP to bind the external port to.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner
     */
    'hostIP'?: string;
    /**
     * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner
     */
    'hostPort'?: number;
    /**
     * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner
     */
    'name'?: string;
    /**
     * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerPortsInner
     */
    'protocol'?: string;
}
/**
 * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'exec'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec;
    /**
     * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'failureThreshold'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'grpc'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'httpGet'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet;
    /**
     * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'initialDelaySeconds'?: number;
    /**
     * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'periodSeconds'?: number;
    /**
     * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'successThreshold'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'tcpSocket'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket;
    /**
     * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod\'s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'terminationGracePeriodSeconds'?: number;
    /**
     * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerReadinessProbe
     */
    'timeoutSeconds'?: number;
}
/**
 * ContainerResizePolicy represents resource resize policy for the container.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResizePolicyInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResizePolicyInner {
    /**
     * Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResizePolicyInner
     */
    'resourceName': string;
    /**
     * Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResizePolicyInner
     */
    'restartPolicy': string;
}
/**
 * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResources
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResources {
    /**
     * Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResources
     */
    'claims'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>;
    /**
     * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResources
     */
    'limits'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
    /**
     * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerResources
     */
    'requests'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
}
/**
 * SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext {
    /**
     * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'allowPrivilegeEscalation'?: boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextAppArmorProfile}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'appArmorProfile'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextAppArmorProfile;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextCapabilities}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'capabilities'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextCapabilities;
    /**
     * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'privileged'?: boolean;
    /**
     * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'procMount'?: string;
    /**
     * Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'readOnlyRootFilesystem'?: boolean;
    /**
     * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'runAsGroup'?: number;
    /**
     * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'runAsNonRoot'?: boolean;
    /**
     * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'runAsUser'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'seLinuxOptions'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeccompProfile}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'seccompProfile'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeccompProfile;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContext
     */
    'windowsOptions'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions;
}
/**
 * appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod\'s appArmorProfile. Note that this field cannot be set when spec.os.name is windows.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextAppArmorProfile
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextAppArmorProfile {
    /**
     * localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is \"Localhost\".
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextAppArmorProfile
     */
    'localhostProfile'?: string;
    /**
     * type indicates which kind of AppArmor profile will be applied. Valid options are:   Localhost - a profile pre-loaded on the node.   RuntimeDefault - the container runtime\'s default profile.   Unconfined - no AppArmor enforcement.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextAppArmorProfile
     */
    'type': string;
}
/**
 * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextCapabilities
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextCapabilities {
    /**
     * Added capabilities
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextCapabilities
     */
    'add'?: Array<string>;
    /**
     * Removed capabilities
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextCapabilities
     */
    'drop'?: Array<string>;
}
/**
 * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions {
    /**
     * Level is SELinux level label that applies to the container.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions
     */
    'level'?: string;
    /**
     * Role is a SELinux role label that applies to the container.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions
     */
    'role'?: string;
    /**
     * Type is a SELinux type label that applies to the container.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions
     */
    'type'?: string;
    /**
     * User is a SELinux user label that applies to the container.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeLinuxOptions
     */
    'user'?: string;
}
/**
 * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeccompProfile
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeccompProfile {
    /**
     * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet\'s configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeccompProfile
     */
    'localhostProfile'?: string;
    /**
     * type indicates which kind of seccomp profile will be applied. Valid options are:   Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextSeccompProfile
     */
    'type': string;
}
/**
 * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions {
    /**
     * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions
     */
    'gmsaCredentialSpec'?: string;
    /**
     * GMSACredentialSpecName is the name of the GMSA credential spec to use.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions
     */
    'gmsaCredentialSpecName'?: string;
    /**
     * HostProcess determines if a container should be run as a \'Host Process\' container. All of a Pod\'s containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions
     */
    'hostProcess'?: boolean;
    /**
     * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerSecurityContextWindowsOptions
     */
    'runAsUserName'?: string;
}
/**
 * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod\'s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'exec'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartExec;
    /**
     * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'failureThreshold'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'grpc'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeGrpc;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'httpGet'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLifecyclePostStartHttpGet;
    /**
     * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'initialDelaySeconds'?: number;
    /**
     * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'periodSeconds'?: number;
    /**
     * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'successThreshold'?: number;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'tcpSocket'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerLivenessProbeTcpSocket;
    /**
     * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod\'s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'terminationGracePeriodSeconds'?: number;
    /**
     * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerStartupProbe
     */
    'timeoutSeconds'?: number;
}
/**
 * volumeDevice describes a mapping of a raw block device within a container.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeDevicesInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeDevicesInner {
    /**
     * devicePath is the path inside of the container that the device will be mapped to.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeDevicesInner
     */
    'devicePath': string;
    /**
     * name must match the name of a persistentVolumeClaim in the pod
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeDevicesInner
     */
    'name': string;
}
/**
 * VolumeMount describes a mounting of a Volume within a container.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner {
    /**
     * Path within the container at which the volume should be mounted.  Must not contain \':\'.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
     */
    'mountPath': string;
    /**
     * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None).
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
     */
    'mountPropagation'?: string;
    /**
     * This must match the Name of a Volume.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
     */
    'name': string;
    /**
     * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
     */
    'readOnly'?: boolean;
    /**
     * RecursiveReadOnly specifies whether read-only mounts should be handled recursively.   If ReadOnly is false, this field has no meaning and must be unspecified.   If ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only.  If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime.  If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason.   If this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None).   If this field is not specified, it is treated as an equivalent of Disabled.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
     */
    'recursiveReadOnly'?: string;
    /**
     * Path within the volume from which the container\'s volume should be mounted. Defaults to \"\" (volume\'s root).
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
     */
    'subPath'?: string;
    /**
     * Expanded path within the volume from which the container\'s volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container\'s environment. Defaults to \"\" (volume\'s root). SubPathExpr and SubPath are mutually exclusive.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner
     */
    'subPathExpr'?: string;
}
/**
 * AdditionalMetadata defines which additional metadata, such as labels and annotations, must be attached to the created resource.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata
     */
    'annotations'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata
     */
    'labels'?: { [key: string]: string; };
}
/**
 * AdditionalVolumeMounts allows to mount an additional volume into each component of the Control Plane (kube-apiserver, controller-manager, and scheduler).
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumeMounts
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumeMounts {
    /**
     * 
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumeMounts
     */
    'apiServer'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>;
    /**
     * 
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumeMounts
     */
    'controllerManager'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>;
    /**
     * 
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumeMounts
     */
    'scheduler'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerVolumeMountsInner>;
}
/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'awsElasticBlockStore'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'azureDisk'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureFile}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'azureFile'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureFile;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'cephfs'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'cinder'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'configMap'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'csi'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPI}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'downwardAPI'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPI;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDir}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'emptyDir'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDir;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeral}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'ephemeral'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeral;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'fc'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'flexVolume'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlocker}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'flocker'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlocker;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'gcePersistentDisk'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGitRepo}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'gitRepo'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGitRepo;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGlusterfs}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'glusterfs'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGlusterfs;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerHostPath}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'hostPath'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerHostPath;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'iscsi'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi;
    /**
     * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'name': string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerNfs}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'nfs'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerNfs;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPersistentVolumeClaim}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'persistentVolumeClaim'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPersistentVolumeClaim;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPhotonPersistentDisk}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'photonPersistentDisk'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPhotonPersistentDisk;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPortworxVolume}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'portworxVolume'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPortworxVolume;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjected}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'projected'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjected;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'quobyte'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'rbd'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'scaleIO'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'secret'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'storageos'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInner
     */
    'vsphereVolume'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume;
}
/**
 * awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet\'s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore {
    /**
     * fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore
     */
    'fsType'?: string;
    /**
     * partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore
     */
    'partition'?: number;
    /**
     * readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore
     */
    'readOnly'?: boolean;
    /**
     * volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAwsElasticBlockStore
     */
    'volumeID': string;
}
/**
 * azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk {
    /**
     * cachingMode is the Host Caching mode: None, Read Only, Read Write.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk
     */
    'cachingMode'?: string;
    /**
     * diskName is the Name of the data disk in the blob storage
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk
     */
    'diskName': string;
    /**
     * diskURI is the URI of data disk in the blob storage
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk
     */
    'diskURI': string;
    /**
     * fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk
     */
    'fsType'?: string;
    /**
     * kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk
     */
    'kind'?: string;
    /**
     * readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureDisk
     */
    'readOnly'?: boolean;
}
/**
 * azureFile represents an Azure File Service mount on the host and bind mount to the pod.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureFile
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureFile {
    /**
     * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureFile
     */
    'readOnly'?: boolean;
    /**
     * secretName is the  name of secret that contains Azure Storage Account Name and Key
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureFile
     */
    'secretName': string;
    /**
     * shareName is the azure share Name
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerAzureFile
     */
    'shareName': string;
}
/**
 * cephFS represents a Ceph FS mount on the host that shares a pod\'s lifetime
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs {
    /**
     * monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs
     */
    'monitors': Array<string>;
    /**
     * path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs
     */
    'path'?: string;
    /**
     * readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs
     */
    'readOnly'?: boolean;
    /**
     * secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs
     */
    'secretFile'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfsSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs
     */
    'secretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfsSecretRef;
    /**
     * user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfs
     */
    'user'?: string;
}
/**
 * secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfsSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfsSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCephfsSecretRef
     */
    'name'?: string;
}
/**
 * cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder {
    /**
     * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder
     */
    'fsType'?: string;
    /**
     * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder
     */
    'readOnly'?: boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinderSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder
     */
    'secretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinderSecretRef;
    /**
     * volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinder
     */
    'volumeID': string;
}
/**
 * secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinderSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinderSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCinderSecretRef
     */
    'name'?: string;
}
/**
 * configMap represents a configMap that should populate this volume
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap {
    /**
     * defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap
     */
    'defaultMode'?: number;
    /**
     * items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the \'..\' path or start with \'..\'.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap
     */
    'items'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap
     */
    'name'?: string;
    /**
     * optional specify whether the ConfigMap or its keys must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMap
     */
    'optional'?: boolean;
}
/**
 * Maps a string key to a path within a volume.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner {
    /**
     * key is the key to project.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner
     */
    'key': string;
    /**
     * mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner
     */
    'mode'?: number;
    /**
     * path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element \'..\'. May not start with the string \'..\'.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner
     */
    'path': string;
}
/**
 * csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi {
    /**
     * driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi
     */
    'driver': string;
    /**
     * fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi
     */
    'fsType'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsiNodePublishSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi
     */
    'nodePublishSecretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsiNodePublishSecretRef;
    /**
     * readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi
     */
    'readOnly'?: boolean;
    /**
     * volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver\'s documentation for supported values.
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsi
     */
    'volumeAttributes'?: { [key: string]: string; };
}
/**
 * nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsiNodePublishSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsiNodePublishSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerCsiNodePublishSecretRef
     */
    'name'?: string;
}
/**
 * downwardAPI represents downward API about the pod that should populate this volume
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPI
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPI {
    /**
     * Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPI
     */
    'defaultMode'?: number;
    /**
     * Items is a list of downward API volume file
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPI
     */
    'items'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner>;
}
/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerFieldRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner
     */
    'fieldRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerFieldRef;
    /**
     * Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner
     */
    'mode'?: number;
    /**
     * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the \'..\' path. Must be utf-8 encoded. The first item of the relative path must not start with \'..\'
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner
     */
    'path': string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerResourceFieldRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner
     */
    'resourceFieldRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerResourceFieldRef;
}
/**
 * Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerFieldRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerFieldRef {
    /**
     * Version of the schema the FieldPath is written in terms of, defaults to \"v1\".
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerFieldRef
     */
    'apiVersion'?: string;
    /**
     * Path of the field to select in the specified API version.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerFieldRef
     */
    'fieldPath': string;
}
/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerResourceFieldRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerResourceFieldRef {
    /**
     * Container name: required for volumes, optional for env vars
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerResourceFieldRef
     */
    'containerName'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRefDivisor}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerResourceFieldRef
     */
    'divisor'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalContainersInnerEnvInnerValueFromResourceFieldRefDivisor;
    /**
     * Required: resource to select
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInnerResourceFieldRef
     */
    'resource': string;
}
/**
 * emptyDir represents a temporary directory that shares a pod\'s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDir
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDir {
    /**
     * medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node\'s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDir
     */
    'medium'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDirSizeLimit}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDir
     */
    'sizeLimit'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDirSizeLimit;
}
/**
 * sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDirSizeLimit
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEmptyDirSizeLimit {
}
/**
 * ephemeral represents a volume that is handled by a cluster storage driver. The volume\'s lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeral
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeral {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeral
     */
    'volumeClaimTemplate'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplate;
}
/**
 * Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplate
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplate {
    /**
     * May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
     * @type {object}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplate
     */
    'metadata'?: object;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplate
     */
    'spec': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec;
}
/**
 * The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec {
    /**
     * accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'accessModes'?: Array<string>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSource}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'dataSource'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSource;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'dataSourceRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecResources}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'resources'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecResources;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelector}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'selector'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelector;
    /**
     * storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'storageClassName'?: string;
    /**
     * volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it\'s not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'volumeAttributesClassName'?: string;
    /**
     * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'volumeMode'?: string;
    /**
     * volumeName is the binding reference to the PersistentVolume backing this claim.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpec
     */
    'volumeName'?: string;
}
/**
 * dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSource {
    /**
     * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSource
     */
    'apiGroup'?: string;
    /**
     * Kind is the type of resource being referenced
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSource
     */
    'kind': string;
    /**
     * Name is the name of resource being referenced
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSource
     */
    'name': string;
}
/**
 * dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn\'t specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn\'t set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef {
    /**
     * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef
     */
    'apiGroup'?: string;
    /**
     * Kind is the type of resource being referenced
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef
     */
    'kind': string;
    /**
     * Name is the name of resource being referenced
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef
     */
    'name': string;
    /**
     * Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace\'s owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecDataSourceRef
     */
    'namespace'?: string;
}
/**
 * resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecResources
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecResources {
    /**
     * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecResources
     */
    'limits'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
    /**
     * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecResources
     */
    'requests'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
}
/**
 * selector is a label query over volumes to consider for binding.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelector
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelector {
    /**
     * matchExpressions is a list of label selector requirements. The requirements are ANDed.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelector
     */
    'matchExpressions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>;
    /**
     * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelector
     */
    'matchLabels'?: { [key: string]: string; };
}
/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner {
    /**
     * key is the label key that the selector applies to.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner
     */
    'key': string;
    /**
     * operator represents a key\'s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner
     */
    'operator': string;
    /**
     * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner
     */
    'values'?: Array<string>;
}
/**
 * fc represents a Fibre Channel resource that is attached to a kubelet\'s host machine and then exposed to the pod.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc {
    /**
     * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc
     */
    'fsType'?: string;
    /**
     * lun is Optional: FC target lun number
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc
     */
    'lun'?: number;
    /**
     * readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc
     */
    'readOnly'?: boolean;
    /**
     * targetWWNs is Optional: FC target worldwide names (WWNs)
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc
     */
    'targetWWNs'?: Array<string>;
    /**
     * wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFc
     */
    'wwids'?: Array<string>;
}
/**
 * flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume {
    /**
     * driver is the name of the driver to use for this volume.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume
     */
    'driver': string;
    /**
     * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume
     */
    'fsType'?: string;
    /**
     * options is Optional: this field holds extra command options if any.
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume
     */
    'options'?: { [key: string]: string; };
    /**
     * readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume
     */
    'readOnly'?: boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolumeSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolume
     */
    'secretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolumeSecretRef;
}
/**
 * secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolumeSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolumeSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlexVolumeSecretRef
     */
    'name'?: string;
}
/**
 * flocker represents a Flocker volume attached to a kubelet\'s host machine. This depends on the Flocker control service being running
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlocker
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlocker {
    /**
     * datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlocker
     */
    'datasetName'?: string;
    /**
     * datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerFlocker
     */
    'datasetUUID'?: string;
}
/**
 * gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet\'s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk {
    /**
     * fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk
     */
    'fsType'?: string;
    /**
     * partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk
     */
    'partition'?: number;
    /**
     * pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk
     */
    'pdName': string;
    /**
     * readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGcePersistentDisk
     */
    'readOnly'?: boolean;
}
/**
 * gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod\'s container.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGitRepo
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGitRepo {
    /**
     * directory is the target directory name. Must not contain or start with \'..\'.  If \'.\' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGitRepo
     */
    'directory'?: string;
    /**
     * repository is the URL
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGitRepo
     */
    'repository': string;
    /**
     * revision is the commit hash for the specified revision.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGitRepo
     */
    'revision'?: string;
}
/**
 * glusterfs represents a Glusterfs mount on the host that shares a pod\'s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGlusterfs
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGlusterfs {
    /**
     * endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGlusterfs
     */
    'endpoints': string;
    /**
     * path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGlusterfs
     */
    'path': string;
    /**
     * readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerGlusterfs
     */
    'readOnly'?: boolean;
}
/**
 * hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerHostPath
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerHostPath {
    /**
     * path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerHostPath
     */
    'path': string;
    /**
     * type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerHostPath
     */
    'type'?: string;
}
/**
 * iscsi represents an ISCSI Disk resource that is attached to a kubelet\'s host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi {
    /**
     * chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'chapAuthDiscovery'?: boolean;
    /**
     * chapAuthSession defines whether support iSCSI Session CHAP authentication
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'chapAuthSession'?: boolean;
    /**
     * fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'fsType'?: string;
    /**
     * initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'initiatorName'?: string;
    /**
     * iqn is the target iSCSI Qualified Name.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'iqn': string;
    /**
     * iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to \'default\' (tcp).
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'iscsiInterface'?: string;
    /**
     * lun represents iSCSI Target Lun number.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'lun': number;
    /**
     * portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'portals'?: Array<string>;
    /**
     * readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'readOnly'?: boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsiSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'secretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsiSecretRef;
    /**
     * targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsi
     */
    'targetPortal': string;
}
/**
 * secretRef is the CHAP Secret for iSCSI target and initiator authentication
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsiSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsiSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerIscsiSecretRef
     */
    'name'?: string;
}
/**
 * nfs represents an NFS mount on the host that shares a pod\'s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerNfs
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerNfs {
    /**
     * path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerNfs
     */
    'path': string;
    /**
     * readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerNfs
     */
    'readOnly'?: boolean;
    /**
     * server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerNfs
     */
    'server': string;
}
/**
 * persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPersistentVolumeClaim
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPersistentVolumeClaim {
    /**
     * claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPersistentVolumeClaim
     */
    'claimName': string;
    /**
     * readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPersistentVolumeClaim
     */
    'readOnly'?: boolean;
}
/**
 * photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPhotonPersistentDisk
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPhotonPersistentDisk {
    /**
     * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPhotonPersistentDisk
     */
    'fsType'?: string;
    /**
     * pdID is the ID that identifies Photon Controller persistent disk
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPhotonPersistentDisk
     */
    'pdID': string;
}
/**
 * portworxVolume represents a portworx volume attached and mounted on kubelets host machine
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPortworxVolume
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPortworxVolume {
    /**
     * fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPortworxVolume
     */
    'fsType'?: string;
    /**
     * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPortworxVolume
     */
    'readOnly'?: boolean;
    /**
     * volumeID uniquely identifies a Portworx volume
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerPortworxVolume
     */
    'volumeID': string;
}
/**
 * projected items for all in one resources secrets, configmaps, and downward API
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjected
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjected {
    /**
     * defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjected
     */
    'defaultMode'?: number;
    /**
     * sources is the list of volume projections
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjected
     */
    'sources'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner>;
}
/**
 * Projection that may be projected along with other supported volume types
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner
     */
    'clusterTrustBundle'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerConfigMap}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner
     */
    'configMap'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerConfigMap;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerDownwardAPI}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner
     */
    'downwardAPI'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerDownwardAPI;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerSecret}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner
     */
    'secret'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerSecret;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerServiceAccountToken}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInner
     */
    'serviceAccountToken'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerServiceAccountToken;
}
/**
 * ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundleLabelSelector}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle
     */
    'labelSelector'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundleLabelSelector;
    /**
     * Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle
     */
    'name'?: string;
    /**
     * If true, don\'t block pod startup if the referenced ClusterTrustBundle(s) aren\'t available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle
     */
    'optional'?: boolean;
    /**
     * Relative path from the volume root to write the bundle.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle
     */
    'path': string;
    /**
     * Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundle
     */
    'signerName'?: string;
}
/**
 * Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundleLabelSelector
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundleLabelSelector {
    /**
     * matchExpressions is a list of label selector requirements. The requirements are ANDed.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundleLabelSelector
     */
    'matchExpressions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>;
    /**
     * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerClusterTrustBundleLabelSelector
     */
    'matchLabels'?: { [key: string]: string; };
}
/**
 * configMap information about the configMap data to project
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerConfigMap
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerConfigMap {
    /**
     * items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the \'..\' path or start with \'..\'.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerConfigMap
     */
    'items'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerConfigMap
     */
    'name'?: string;
    /**
     * optional specify whether the ConfigMap or its keys must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerConfigMap
     */
    'optional'?: boolean;
}
/**
 * downwardAPI information about the downwardAPI data to project
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerDownwardAPI
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerDownwardAPI {
    /**
     * Items is a list of DownwardAPIVolume file
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerDownwardAPI
     */
    'items'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerDownwardAPIItemsInner>;
}
/**
 * secret information about the secret data to project
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerSecret
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerSecret {
    /**
     * items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the \'..\' path or start with \'..\'.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerSecret
     */
    'items'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerSecret
     */
    'name'?: string;
    /**
     * optional field specify whether the Secret or its key must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerSecret
     */
    'optional'?: boolean;
}
/**
 * serviceAccountToken is information about the serviceAccountToken data to project
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerServiceAccountToken
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerServiceAccountToken {
    /**
     * audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerServiceAccountToken
     */
    'audience'?: string;
    /**
     * expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerServiceAccountToken
     */
    'expirationSeconds'?: number;
    /**
     * path is the path relative to the mount point of the file to project the token into.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerProjectedSourcesInnerServiceAccountToken
     */
    'path': string;
}
/**
 * quobyte represents a Quobyte mount on the host that shares a pod\'s lifetime
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte {
    /**
     * group to map volume access to Default is no group
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte
     */
    'group'?: string;
    /**
     * readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte
     */
    'readOnly'?: boolean;
    /**
     * registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte
     */
    'registry': string;
    /**
     * tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte
     */
    'tenant'?: string;
    /**
     * user to map volume access to Defaults to serivceaccount user
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte
     */
    'user'?: string;
    /**
     * volume is a string that references an already created Quobyte volume by name.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerQuobyte
     */
    'volume': string;
}
/**
 * rbd represents a Rados Block Device mount on the host that shares a pod\'s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd {
    /**
     * fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'fsType'?: string;
    /**
     * image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'image': string;
    /**
     * keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'keyring'?: string;
    /**
     * monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'monitors': Array<string>;
    /**
     * pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'pool'?: string;
    /**
     * readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'readOnly'?: boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbdSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'secretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbdSecretRef;
    /**
     * user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbd
     */
    'user'?: string;
}
/**
 * secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbdSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbdSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerRbdSecretRef
     */
    'name'?: string;
}
/**
 * scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO {
    /**
     * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'fsType'?: string;
    /**
     * gateway is the host address of the ScaleIO API Gateway.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'gateway': string;
    /**
     * protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'protectionDomain'?: string;
    /**
     * readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'readOnly'?: boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIOSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'secretRef': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIOSecretRef;
    /**
     * sslEnabled Flag enable/disable SSL communication with Gateway, default false
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'sslEnabled'?: boolean;
    /**
     * storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'storageMode'?: string;
    /**
     * storagePool is the ScaleIO Storage Pool associated with the protection domain.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'storagePool'?: string;
    /**
     * system is the name of the storage system as configured in ScaleIO.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'system': string;
    /**
     * volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIO
     */
    'volumeName'?: string;
}
/**
 * secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIOSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIOSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerScaleIOSecretRef
     */
    'name'?: string;
}
/**
 * secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret {
    /**
     * defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret
     */
    'defaultMode'?: number;
    /**
     * items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the \'..\' path or start with \'..\'.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret
     */
    'items'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerConfigMapItemsInner>;
    /**
     * optional field specify whether the Secret or its keys must be defined
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret
     */
    'optional'?: boolean;
    /**
     * secretName is the name of the secret in the pod\'s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerSecret
     */
    'secretName'?: string;
}
/**
 * storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos {
    /**
     * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos
     */
    'fsType'?: string;
    /**
     * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos
     */
    'readOnly'?: boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageosSecretRef}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos
     */
    'secretRef'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageosSecretRef;
    /**
     * volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos
     */
    'volumeName'?: string;
    /**
     * volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod\'s namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageos
     */
    'volumeNamespace'?: string;
}
/**
 * secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageosSecretRef
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageosSecretRef {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerStorageosSecretRef
     */
    'name'?: string;
}
/**
 * vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume {
    /**
     * fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume
     */
    'fsType'?: string;
    /**
     * storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume
     */
    'storagePolicyID'?: string;
    /**
     * storagePolicyName is the storage Policy Based Management (SPBM) profile name.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume
     */
    'storagePolicyName'?: string;
    /**
     * volumePath is the path that identifies vSphere volume vmdk
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerVsphereVolume
     */
    'volumePath': string;
}
/**
 * If specified, the Tenant Control Plane pod\'s scheduling constraints. More info: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinity
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinity {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinity}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinity
     */
    'nodeAffinity'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinity;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinity}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinity
     */
    'podAffinity'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinity;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAntiAffinity}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinity
     */
    'podAntiAffinity'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAntiAffinity;
}
/**
 * Describes node affinity scheduling rules for the pod.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinity
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinity {
    /**
     * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinity
     */
    'preferredDuringSchedulingIgnoredDuringExecution'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinity
     */
    'requiredDuringSchedulingIgnoredDuringExecution'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
}
/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it\'s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
     */
    'preference': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference;
    /**
     * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
     */
    'weight': number;
}
/**
 * A node selector term, associated with the corresponding weight.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference {
    /**
     * A list of node selector requirements by node\'s labels.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference
     */
    'matchExpressions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>;
    /**
     * A list of node selector requirements by node\'s fields.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference
     */
    'matchFields'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>;
}
/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner {
    /**
     * The label key that the selector applies to.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner
     */
    'key': string;
    /**
     * Represents a key\'s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner
     */
    'operator': string;
    /**
     * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner
     */
    'values'?: Array<string>;
}
/**
 * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
    /**
     * Required. A list of node selector terms. The terms are ORed.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
     */
    'nodeSelectorTerms': Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInner>;
}
/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInner {
    /**
     * A list of node selector requirements by node\'s labels.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInner
     */
    'matchExpressions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>;
    /**
     * A list of node selector requirements by node\'s fields.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInner
     */
    'matchFields'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreferenceMatchExpressionsInner>;
}
/**
 * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinity
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinity {
    /**
     * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinity
     */
    'preferredDuringSchedulingIgnoredDuringExecution'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner>;
    /**
     * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinity
     */
    'requiredDuringSchedulingIgnoredDuringExecution'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner>;
}
/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
     */
    'podAffinityTerm': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm;
    /**
     * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
     */
    'weight': number;
}
/**
 * Required. A pod affinity term, associated with the corresponding weight.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm
     */
    'labelSelector'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector;
    /**
     * MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod\'s pod (anti) affinity. Keys that don\'t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\'t set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm
     */
    'matchLabelKeys'?: Array<string>;
    /**
     * MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod\'s pod (anti) affinity. Keys that don\'t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\'t set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm
     */
    'mismatchLabelKeys'?: Array<string>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm
     */
    'namespaceSelector'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector;
    /**
     * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod\'s namespace\".
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm
     */
    'namespaces'?: Array<string>;
    /**
     * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTerm
     */
    'topologyKey': string;
}
/**
 * A label query over a set of resources, in this case pods. If it\'s null, this PodAffinityTerm matches with no Pods.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector {
    /**
     * matchExpressions is a list of label selector requirements. The requirements are ANDed.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector
     */
    'matchExpressions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>;
    /**
     * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector
     */
    'matchLabels'?: { [key: string]: string; };
}
/**
 * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod\'s namespace\". An empty selector ({}) matches all namespaces.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector {
    /**
     * matchExpressions is a list of label selector requirements. The requirements are ANDed.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector
     */
    'matchExpressions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>;
    /**
     * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector
     */
    'matchLabels'?: { [key: string]: string; };
}
/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner
     */
    'labelSelector'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermLabelSelector;
    /**
     * MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod\'s pod (anti) affinity. Keys that don\'t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\'t set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner
     */
    'matchLabelKeys'?: Array<string>;
    /**
     * MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod\'s pod (anti) affinity. Keys that don\'t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\'t set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner
     */
    'mismatchLabelKeys'?: Array<string>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner
     */
    'namespaceSelector'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPodAffinityTermNamespaceSelector;
    /**
     * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod\'s namespace\".
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner
     */
    'namespaces'?: Array<string>;
    /**
     * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner
     */
    'topologyKey': string;
}
/**
 * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAntiAffinity
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAntiAffinity {
    /**
     * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAntiAffinity
     */
    'preferredDuringSchedulingIgnoredDuringExecution'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner>;
    /**
     * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAntiAffinity
     */
    'requiredDuringSchedulingIgnoredDuringExecution'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInner>;
}
/**
 * ExtraArgs allows adding additional arguments to the Control Plane components, such as kube-apiserver, controller-manager, and scheduler. WARNING - This option can override existing parameters and cause components to misbehave in unxpected ways. Only modify if you know what you are doing.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs {
    /**
     * 
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs
     */
    'apiServer'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs
     */
    'controllerManager'?: Array<string>;
    /**
     * Available only if Kamaji is running using Kine as backing storage.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs
     */
    'kine'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentExtraArgs
     */
    'scheduler'?: Array<string>;
}
/**
 * RegistrySettings allows to override the default images for the given Tenant Control Plane instance. It could be used to point to a different container registry rather than the public one.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings
     */
    'apiServerImage'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings
     */
    'controllerManagerImage'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings
     */
    'registry'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings
     */
    'schedulerImage'?: string;
    /**
     * The tag to append to all the Control Plane container images. Optional.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentRegistrySettings
     */
    'tagSuffix'?: string;
}
/**
 * Resources defines the amount of memory and CPU to allocate to each component of the Control Plane (kube-apiserver, controller-manager, and scheduler).
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources
     */
    'apiServer'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources
     */
    'controllerManager'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesKine}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources
     */
    'kine'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesKine;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResources
     */
    'scheduler'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer;
}
/**
 * ResourceRequirements describes the compute resource requirements.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer {
    /**
     * Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer
     */
    'claims'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>;
    /**
     * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer
     */
    'limits'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
    /**
     * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesApiServer
     */
    'requests'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
}
/**
 * Define the kine container resources. Available only if Kamaji is running using Kine as backing storage.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesKine
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesKine {
    /**
     * Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesKine
     */
    'claims'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesClaimsInner>;
    /**
     * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesKine
     */
    'limits'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
    /**
     * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
     * @type {{ [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentResourcesKine
     */
    'requests'?: { [key: string]: IoClastixKamajiV1alpha1TenantControlPlaneSpecAddonsKonnectivityServerResourcesLimitsValue; };
}
/**
 * Strategy describes how to replace existing pods with new ones for the given Tenant Control Plane. Default value is set to Rolling Update, with a blue/green strategy.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategy
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategy {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategy
     */
    'rollingUpdate'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdate;
    /**
     * Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategy
     */
    'type'?: string;
}
/**
 * Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate. --- TODO: Update this to follow our convention for oneOf, whatever we decide it to be.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdate
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdate {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxSurge}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdate
     */
    'maxSurge'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxSurge;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxUnavailable}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdate
     */
    'maxUnavailable'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxUnavailable;
}
/**
 * The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxSurge
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxSurge {
}
/**
 * The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxUnavailable
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentStrategyRollingUpdateMaxUnavailable {
}
/**
 * TopologySpreadConstraint specifies how to spread matching pods among the given topology.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInnerLabelSelector}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'labelSelector'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInnerLabelSelector;
    /**
     * MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn\'t set. Keys that don\'t exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.   This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'matchLabelKeys'?: Array<string>;
    /**
     * MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It\'s a required field. Default value is 1 and 0 is not allowed.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'maxSkew': number;
    /**
     * MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won\'t schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.   For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'minDomains'?: number;
    /**
     * NodeAffinityPolicy indicates how we will treat Pod\'s nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.   If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'nodeAffinityPolicy'?: string;
    /**
     * NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.   If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'nodeTaintsPolicy'?: string;
    /**
     * TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It\'s a required field.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'topologyKey': string;
    /**
     * WhenUnsatisfiable indicates how to deal with a pod if it doesn\'t satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won\'t make it *more* imbalanced. It\'s a required field.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInner
     */
    'whenUnsatisfiable': string;
}
/**
 * LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInnerLabelSelector
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInnerLabelSelector {
    /**
     * matchExpressions is a list of label selector requirements. The requirements are ANDed.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInnerLabelSelector
     */
    'matchExpressions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalVolumesInnerEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInner>;
    /**
     * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
     * @type {{ [key: string]: string; }}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentTopologySpreadConstraintsInnerLabelSelector
     */
    'matchLabels'?: { [key: string]: string; };
}
/**
 * Defining the options for an Optional Ingress which will expose API Server of the Tenant Control Plane
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneIngress
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneIngress {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneIngress
     */
    'additionalMetadata'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata;
    /**
     * Hostname is an optional field which will be used as Ingress\'s Host. If it is not defined, Ingress\'s host will be \"<tenant>.<namespace>.<domain>\", where domain is specified under NetworkProfileSpec
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneIngress
     */
    'hostname'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneIngress
     */
    'ingressClassName'?: string;
}
/**
 * Defining the options for the Tenant Control Plane Service resource.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneService
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneService {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneService
     */
    'additionalMetadata'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneDeploymentAdditionalMetadata;
    /**
     * ServiceType allows specifying how to expose the Tenant Control Plane.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneService
     */
    'serviceType': IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneServiceServiceTypeEnum;
}

export const IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneServiceServiceTypeEnum = {
    ClusterIp: 'ClusterIP',
    NodePort: 'NodePort',
    LoadBalancer: 'LoadBalancer'
} as const;

export type IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneServiceServiceTypeEnum = typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneServiceServiceTypeEnum[keyof typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecControlPlaneServiceServiceTypeEnum];

/**
 * Kubernetes specification for tenant control plane
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetes
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetes {
    /**
     * List of enabled Admission Controllers for the Tenant cluster. Full reference available here: https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetes
     */
    'admissionControllers'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesAdmissionControllersEnum>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubelet}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetes
     */
    'kubelet': IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubelet;
    /**
     * Kubernetes Version for the tenant control plane
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetes
     */
    'version': string;
}

export const IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesAdmissionControllersEnum = {
    AlwaysAdmit: 'AlwaysAdmit',
    AlwaysDeny: 'AlwaysDeny',
    AlwaysPullImages: 'AlwaysPullImages',
    CertificateApproval: 'CertificateApproval',
    CertificateSigning: 'CertificateSigning',
    CertificateSubjectRestriction: 'CertificateSubjectRestriction',
    DefaultIngressClass: 'DefaultIngressClass',
    DefaultStorageClass: 'DefaultStorageClass',
    DefaultTolerationSeconds: 'DefaultTolerationSeconds',
    DenyEscalatingExec: 'DenyEscalatingExec',
    DenyExecOnPrivileged: 'DenyExecOnPrivileged',
    DenyServiceExternalIps: 'DenyServiceExternalIPs',
    EventRateLimit: 'EventRateLimit',
    ExtendedResourceToleration: 'ExtendedResourceToleration',
    ImagePolicyWebhook: 'ImagePolicyWebhook',
    LimitPodHardAntiAffinityTopology: 'LimitPodHardAntiAffinityTopology',
    LimitRanger: 'LimitRanger',
    MutatingAdmissionWebhook: 'MutatingAdmissionWebhook',
    NamespaceAutoProvision: 'NamespaceAutoProvision',
    NamespaceExists: 'NamespaceExists',
    NamespaceLifecycle: 'NamespaceLifecycle',
    NodeRestriction: 'NodeRestriction',
    OwnerReferencesPermissionEnforcement: 'OwnerReferencesPermissionEnforcement',
    PersistentVolumeClaimResize: 'PersistentVolumeClaimResize',
    PersistentVolumeLabel: 'PersistentVolumeLabel',
    PodNodeSelector: 'PodNodeSelector',
    PodSecurity: 'PodSecurity',
    PodSecurityPolicy: 'PodSecurityPolicy',
    PodTolerationRestriction: 'PodTolerationRestriction',
    Priority: 'Priority',
    ResourceQuota: 'ResourceQuota',
    RuntimeClass: 'RuntimeClass',
    SecurityContextDeny: 'SecurityContextDeny',
    ServiceAccount: 'ServiceAccount',
    StorageObjectInUseProtection: 'StorageObjectInUseProtection',
    TaintNodesByCondition: 'TaintNodesByCondition',
    ValidatingAdmissionWebhook: 'ValidatingAdmissionWebhook'
} as const;

export type IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesAdmissionControllersEnum = typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesAdmissionControllersEnum[keyof typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesAdmissionControllersEnum];

/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubelet
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubelet {
    /**
     * CGroupFS defines the  cgroup driver for Kubelet https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/configure-cgroup-driver/
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubelet
     */
    'cgroupfs'?: IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletCgroupfsEnum;
    /**
     * Ordered list of the preferred NodeAddressTypes to use for kubelet connections. Default to Hostname, InternalIP, ExternalIP.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubelet
     */
    'preferredAddressTypes'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletPreferredAddressTypesEnum>;
}

export const IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletCgroupfsEnum = {
    Systemd: 'systemd',
    Cgroupfs: 'cgroupfs'
} as const;

export type IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletCgroupfsEnum = typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletCgroupfsEnum[keyof typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletCgroupfsEnum];
export const IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletPreferredAddressTypesEnum = {
    Hostname: 'Hostname',
    InternalIp: 'InternalIP',
    ExternalIp: 'ExternalIP',
    InternalDns: 'InternalDNS',
    ExternalDns: 'ExternalDNS'
} as const;

export type IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletPreferredAddressTypesEnum = typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletPreferredAddressTypesEnum[keyof typeof IoClastixKamajiV1alpha1TenantControlPlaneSpecKubernetesKubeletPreferredAddressTypesEnum];

/**
 * NetworkProfile specifies how the network is
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile {
    /**
     * Address where API server of will be exposed. In case of LoadBalancer Service, this can be empty in order to use the exposed IP provided by the cloud controller manager.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
     */
    'address'?: string;
    /**
     * AllowAddressAsExternalIP will include tenantControlPlane.Spec.NetworkProfile.Address in the section of ExternalIPs of the Kubernetes Service (only ClusterIP or NodePort)
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
     */
    'allowAddressAsExternalIP'?: boolean;
    /**
     * CertSANs sets extra Subject Alternative Names (SANs) for the API Server signing certificate. Use this field to add additional hostnames when exposing the Tenant Control Plane with third solutions.
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
     */
    'certSANs'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
     */
    'dnsServiceIPs'?: Array<string>;
    /**
     * CIDR for Kubernetes Pods
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
     */
    'podCidr'?: string;
    /**
     * Port where API server of will be exposed
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
     */
    'port'?: number;
    /**
     * Kubernetes Service
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile
     */
    'serviceCidr'?: string;
}
/**
 * TenantControlPlaneStatus defines the observed state of TenantControlPlane.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatus
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatus {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddons}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'addons'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddons;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'certificates'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates;
    /**
     * ControlPlaneEndpoint contains the status of the kubernetes control plane
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'controlPlaneEndpoint'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhase}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'kubeadmPhase'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhase;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmconfig}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'kubeadmconfig'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmconfig;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeconfig}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'kubeconfig'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeconfig;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'kubernetesResources'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatus
     */
    'storage'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage;
}
/**
 * Addons contains the status of the different Addons
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddons
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddons {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddons
     */
    'coreDNS'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddons
     */
    'konnectivity'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddons
     */
    'kubeProxy'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS;
}
/**
 * AddonStatus defines the observed state of an Addon.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS {
    /**
     * 
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS
     */
    'enabled': boolean;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsCoreDNS
     */
    'lastUpdate'?: string;
}
/**
 * KonnectivityStatus defines the status of Konnectivity as Addon.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'agent'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'certificate'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'clusterrolebinding'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityConfigMap}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'configMap'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityConfigMap;
    /**
     * 
     * @type {boolean}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'enabled': boolean;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'kubeconfig'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'sa'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivity
     */
    'service'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent {
    /**
     * Last time when k8s object was updated
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityAgent
     */
    'namespace'?: string;
}
/**
 * CertificatePrivateKeyPairStatus defines the status.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate
     */
    'secretName'?: string;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityConfigMap
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityConfigMap {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityConfigMap
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityConfigMap
     */
    'name'?: string;
}
/**
 * KubeconfigStatus contains information about the generated kubeconfig.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig
     */
    'secretName'?: string;
}
/**
 * KubernetesServiceStatus defines the status for the Tenant Control Plane Service in the management cluster.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService {
    /**
     * Current service state
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService
     */
    'conditions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner>;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancer}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService
     */
    'loadBalancer'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancer;
    /**
     * The name of the Service for the given cluster.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService
     */
    'name': string;
    /**
     * The namespace which the Service for the given cluster is deployed.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService
     */
    'namespace': string;
    /**
     * The port where the service is running
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService
     */
    'port': number;
}
/**
 * Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example,    type FooStatus struct{      // Represents the observations of a foo\'s current state.      // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"      // +patchMergeKey=type      // +patchStrategy=merge      // +listType=map      // +listMapKey=type      Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`        // other fields  }
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner {
    /**
     * lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner
     */
    'lastTransitionTime': string;
    /**
     * message is a human readable message indicating details about the transition. This may be an empty string.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner
     */
    'message': string;
    /**
     * observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner
     */
    'observedGeneration'?: number;
    /**
     * reason contains a programmatic identifier indicating the reason for the condition\'s last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner
     */
    'reason': string;
    /**
     * status of the condition, one of True, False, Unknown.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner
     */
    'status': IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInnerStatusEnum;
    /**
     * type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInner
     */
    'type': string;
}

export const IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInnerStatusEnum = {
    True: 'True',
    False: 'False',
    Unknown: 'Unknown'
} as const;

export type IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInnerStatusEnum = typeof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInnerStatusEnum[keyof typeof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceConditionsInnerStatusEnum];

/**
 * LoadBalancer contains the current status of the load-balancer, if one is present.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancer
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancer {
    /**
     * Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancer
     */
    'ingress'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner>;
}
/**
 * LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner {
    /**
     * Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner
     */
    'hostname'?: string;
    /**
     * IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner
     */
    'ip'?: string;
    /**
     * IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified. Setting this to \"VIP\" indicates that traffic is delivered to the node with the destination set to the load-balancer\'s IP and port. Setting this to \"Proxy\" indicates that traffic is delivered to the node or pod with the destination set to the node\'s IP and node port or the pod\'s IP and port. Service implementations may use this information to adjust traffic routing.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner
     */
    'ipMode'?: string;
    /**
     * Ports is a list of records of service ports If used, every port defined in the service should have an entry in it
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInnerPortsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInner
     */
    'ports'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInnerPortsInner>;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInnerPortsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInnerPortsInner {
    /**
     * Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use   CamelCase names - cloud provider specific error values must have names that comply with the   format foo.example.com/CamelCase. --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInnerPortsInner
     */
    'error'?: string;
    /**
     * Port is the port number of the service port of which status is recorded here
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInnerPortsInner
     */
    'port': number;
    /**
     * Protocol is the protocol of the service port of which status is recorded here The supported values are: \"TCP\", \"UDP\", \"SCTP\"
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityServiceLoadBalancerIngressInnerPortsInner
     */
    'protocol': string;
}
/**
 * Certificates contains information about the different certificates that are necessary to run a kubernetes control plane
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
     */
    'apiServer'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
     */
    'apiServerKubeletClient'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
     */
    'ca'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcd}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
     */
    'etcd'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcd;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
     */
    'frontProxyCA'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
     */
    'frontProxyClient'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityCertificate;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesSa}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificates
     */
    'sa'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesSa;
}
/**
 * ETCDCertificatesStatus defines the observed state of ETCD Certificate for API server.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcd
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcd {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdApiServer}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcd
     */
    'apiServer'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdApiServer;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdCa}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcd
     */
    'ca'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdCa;
}
/**
 * APIServerCertificatesStatus defines the observed state of ETCD Certificate for API server.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdApiServer
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdApiServer {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdApiServer
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdApiServer
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdApiServer
     */
    'secretName'?: string;
}
/**
 * ETCDCertificateStatus defines the observed state of ETCD Certificate for API server.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdCa
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdCa {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdCa
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdCa
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesEtcdCa
     */
    'secretName'?: string;
}
/**
 * PublicKeyPrivateKeyPairStatus defines the status.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesSa
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesSa {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesSa
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesSa
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusCertificatesSa
     */
    'secretName'?: string;
}
/**
 * KubeadmPhase contains the status of the kubeadm phases action
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhase
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhase {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhaseBootstrapToken}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhase
     */
    'bootstrapToken': IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhaseBootstrapToken;
}
/**
 * KubeadmPhaseStatus contains the status of a kubeadm phase action.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhaseBootstrapToken
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhaseBootstrapToken {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhaseBootstrapToken
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmPhaseBootstrapToken
     */
    'lastUpdate'?: string;
}
/**
 * KubeadmConfig contains the status of the configuration required by kubeadm
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmconfig
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmconfig {
    /**
     * Checksum of the kubeadm configuration to detect changes
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmconfig
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmconfig
     */
    'configmapName'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeadmconfig
     */
    'lastUpdate'?: string;
}
/**
 * KubeConfig contains information about the kubenconfigs that control plane pieces need
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeconfig
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeconfig {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeconfig
     */
    'admin'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeconfig
     */
    'controllerManager'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubeconfig
     */
    'scheduler'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityKubeconfig;
}
/**
 * Kubernetes contains information about the reconciliation of the required Kubernetes resources deployed in the admin cluster
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources
     */
    'deployment'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngress}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources
     */
    'ingress'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngress;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources
     */
    'service'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusAddonsKonnectivityService;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersion}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResources
     */
    'version'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersion;
}
/**
 * KubernetesDeploymentStatus defines the status for the Tenant Control Plane Deployment in the management cluster.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment {
    /**
     * Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'availableReplicas'?: number;
    /**
     * Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'collisionCount'?: number;
    /**
     * Represents the latest available observations of a deployment\'s current state.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'conditions'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner>;
    /**
     * Last time when deployment was updated
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'lastUpdate'?: string;
    /**
     * The name of the Deployment for the given cluster.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'name': string;
    /**
     * The namespace which the Deployment for the given cluster is deployed.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'namespace': string;
    /**
     * The generation observed by the deployment controller.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'observedGeneration'?: number;
    /**
     * readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'readyReplicas'?: number;
    /**
     * Total number of non-terminated pods targeted by this deployment (their labels match the selector).
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'replicas'?: number;
    /**
     * Selector is the label selector used to group the Tenant Control Plane Pods used by the scale subresource.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'selector': string;
    /**
     * Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'unavailableReplicas'?: number;
    /**
     * Total number of non-terminated pods targeted by this deployment that have the desired template spec.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeployment
     */
    'updatedReplicas'?: number;
}
/**
 * DeploymentCondition describes the state of a deployment at a certain point.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner {
    /**
     * Last time the condition transitioned from one status to another.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner
     */
    'lastTransitionTime'?: string;
    /**
     * The last time this condition was updated.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner
     */
    'lastUpdateTime'?: string;
    /**
     * A human readable message indicating details about the transition.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner
     */
    'message'?: string;
    /**
     * The reason for the condition\'s last transition.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner
     */
    'reason'?: string;
    /**
     * Status of the condition, one of True, False, Unknown.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner
     */
    'status': string;
    /**
     * Type of deployment condition.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesDeploymentConditionsInner
     */
    'type': string;
}
/**
 * KubernetesIngressStatus defines the status for the Tenant Control Plane Ingress in the management cluster.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngress
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngress {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancer}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngress
     */
    'loadBalancer'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancer;
    /**
     * The name of the Ingress for the given cluster.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngress
     */
    'name': string;
    /**
     * The namespace which the Ingress for the given cluster is deployed.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngress
     */
    'namespace': string;
}
/**
 * loadBalancer contains the current status of the load-balancer.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancer
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancer {
    /**
     * ingress is a list containing ingress points for the load-balancer.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancer
     */
    'ingress'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInner>;
}
/**
 * IngressLoadBalancerIngress represents the status of a load-balancer ingress point.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInner {
    /**
     * hostname is set for load-balancer ingress points that are DNS based.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInner
     */
    'hostname'?: string;
    /**
     * ip is set for load-balancer ingress points that are IP based.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInner
     */
    'ip'?: string;
    /**
     * ports provides information about the ports exposed by this LoadBalancer.
     * @type {Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInnerPortsInner>}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInner
     */
    'ports'?: Array<IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInnerPortsInner>;
}
/**
 * IngressPortStatus represents the error condition of a service port
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInnerPortsInner
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInnerPortsInner {
    /**
     * error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use   CamelCase names - cloud provider specific error values must have names that comply with the   format foo.example.com/CamelCase. --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInnerPortsInner
     */
    'error'?: string;
    /**
     * port is the port number of the ingress port.
     * @type {number}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInnerPortsInner
     */
    'port': number;
    /**
     * protocol is the protocol of the ingress port. The supported values are: \"TCP\", \"UDP\", \"SCTP\"
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesIngressLoadBalancerIngressInnerPortsInner
     */
    'protocol': string;
}
/**
 * KubernetesVersion contains the information regarding the running Kubernetes version, and its upgrade status.
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersion
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersion {
    /**
     * Status returns the current status of the Kubernetes version, such as its provisioning state, or completed upgrade.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersion
     */
    'status'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersionStatusEnum;
    /**
     * Version is the running Kubernetes version of the Tenant Control Plane.
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersion
     */
    'version'?: string;
}

export const IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersionStatusEnum = {
    Provisioning: 'Provisioning',
    CertificateAuthorityRotating: 'CertificateAuthorityRotating',
    Upgrading: 'Upgrading',
    Migrating: 'Migrating',
    Ready: 'Ready',
    NotReady: 'NotReady'
} as const;

export type IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersionStatusEnum = typeof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersionStatusEnum[keyof typeof IoClastixKamajiV1alpha1TenantControlPlaneStatusKubernetesResourcesVersionStatusEnum];

/**
 * Storage Status contains information about Kubernetes storage system
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage {
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageCertificate}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage
     */
    'certificate'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageCertificate;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageConfig}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage
     */
    'config'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageConfig;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage
     */
    'dataStoreName'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage
     */
    'driver'?: string;
    /**
     * 
     * @type {IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorage
     */
    'setup'?: IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageCertificate
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageCertificate {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageCertificate
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageCertificate
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageCertificate
     */
    'secretName'?: string;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageConfig
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageConfig {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageConfig
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageConfig
     */
    'secretName'?: string;
}
/**
 * 
 * @export
 * @interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup
 */
export interface IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup {
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup
     */
    'lastUpdate'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup
     */
    'schema'?: string;
    /**
     * 
     * @type {string}
     * @memberof IoClastixKamajiV1alpha1TenantControlPlaneStatusStorageSetup
     */
    'user'?: string;
}
/**
 * Scale represents a scaling request for a resource.
 * @export
 * @interface IoK8sApiAutoscalingV1Scale
 */
export interface IoK8sApiAutoscalingV1Scale {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoK8sApiAutoscalingV1Scale
     */
    'apiVersion'?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApiAutoscalingV1Scale
     */
    'kind'?: string;
    /**
     * Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof IoK8sApiAutoscalingV1Scale
     */
    'metadata'?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * spec defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.
     * @type {IoK8sApiAutoscalingV1ScaleSpec}
     * @memberof IoK8sApiAutoscalingV1Scale
     */
    'spec'?: IoK8sApiAutoscalingV1ScaleSpec;
    /**
     * status is the current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only.
     * @type {IoK8sApiAutoscalingV1ScaleStatus}
     * @memberof IoK8sApiAutoscalingV1Scale
     */
    'status'?: IoK8sApiAutoscalingV1ScaleStatus;
}
/**
 * ScaleSpec describes the attributes of a scale subresource.
 * @export
 * @interface IoK8sApiAutoscalingV1ScaleSpec
 */
export interface IoK8sApiAutoscalingV1ScaleSpec {
    /**
     * replicas is the desired number of instances for the scaled object.
     * @type {number}
     * @memberof IoK8sApiAutoscalingV1ScaleSpec
     */
    'replicas'?: number;
}
/**
 * ScaleStatus represents the current status of a scale subresource.
 * @export
 * @interface IoK8sApiAutoscalingV1ScaleStatus
 */
export interface IoK8sApiAutoscalingV1ScaleStatus {
    /**
     * replicas is the actual number of observed instances of the scaled object.
     * @type {number}
     * @memberof IoK8sApiAutoscalingV1ScaleStatus
     */
    'replicas': number;
    /**
     * selector is the label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
     * @type {string}
     * @memberof IoK8sApiAutoscalingV1ScaleStatus
     */
    'selector'?: string;
}
/**
 * DeleteOptions may be provided when deleting an API object.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1DeleteOptions
 */
export interface IoK8sApimachineryPkgApisMetaV1DeleteOptions {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1DeleteOptions
     */
    'apiVersion'?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @type {Array<string>}
     * @memberof IoK8sApimachineryPkgApisMetaV1DeleteOptions
     */
    'dryRun'?: Array<string>;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1DeleteOptions
     */
    'gracePeriodSeconds'?: number;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1DeleteOptions
     */
    'kind'?: string;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @type {boolean}
     * @memberof IoK8sApimachineryPkgApisMetaV1DeleteOptions
     */
    'orphanDependents'?: boolean;
    /**
     * Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.
     * @type {IoK8sApimachineryPkgApisMetaV1Preconditions}
     * @memberof IoK8sApimachineryPkgApisMetaV1DeleteOptions
     */
    'preconditions'?: IoK8sApimachineryPkgApisMetaV1Preconditions;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \'Orphan\' - orphan the dependents; \'Background\' - allow the garbage collector to delete the dependents in the background; \'Foreground\' - a cascading policy that deletes all dependents in the foreground.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1DeleteOptions
     */
    'propagationPolicy'?: string;
}
/**
 * ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1ListMeta
 */
export interface IoK8sApimachineryPkgApisMetaV1ListMeta {
    /**
     * continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ListMeta
     */
    'continue'?: string;
    /**
     * remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1ListMeta
     */
    'remainingItemCount'?: number;
    /**
     * String that identifies the server\'s internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ListMeta
     */
    'resourceVersion'?: string;
    /**
     * Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ListMeta
     */
    'selfLink'?: string;
}
/**
 * ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
 */
export interface IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry {
    /**
     * APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
     */
    'apiVersion'?: string;
    /**
     * FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
     */
    'fieldsType'?: string;
    /**
     * FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.
     * @type {object}
     * @memberof IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
     */
    'fieldsV1'?: object;
    /**
     * Manager is an identifier of the workflow managing these fields.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
     */
    'manager'?: string;
    /**
     * Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are \'Apply\' and \'Update\'.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
     */
    'operation'?: string;
    /**
     * Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
     */
    'subresource'?: string;
    /**
     * Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
     */
    'time'?: string;
}
/**
 * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1ObjectMeta
 */
export interface IoK8sApimachineryPkgApisMetaV1ObjectMeta {
    /**
     * Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'annotations'?: { [key: string]: string; };
    /**
     * CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.  Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'creationTimestamp'?: string;
    /**
     * Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'deletionGracePeriodSeconds'?: number;
    /**
     * DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.  Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'deletionTimestamp'?: string;
    /**
     * Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
     * @type {Array<string>}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'finalizers'?: Array<string>;
    /**
     * GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.  If this field is specified and the generated name exists, the server will return a 409.  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'generateName'?: string;
    /**
     * A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'generation'?: number;
    /**
     * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'labels'?: { [key: string]: string; };
    /**
     * ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn\'t need to set or understand this field. A workflow can be the user\'s name, a controller\'s name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.
     * @type {Array<IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry>}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'managedFields'?: Array<IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry>;
    /**
     * Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'name'?: string;
    /**
     * Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.  Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'namespace'?: string;
    /**
     * List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
     * @type {Array<IoK8sApimachineryPkgApisMetaV1OwnerReference>}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'ownerReferences'?: Array<IoK8sApimachineryPkgApisMetaV1OwnerReference>;
    /**
     * An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'resourceVersion'?: string;
    /**
     * Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'selfLink'?: string;
    /**
     * UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.  Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    'uid'?: string;
}
/**
 * OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1OwnerReference
 */
export interface IoK8sApimachineryPkgApisMetaV1OwnerReference {
    /**
     * API version of the referent.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    'apiVersion': string;
    /**
     * If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
     * @type {boolean}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    'blockOwnerDeletion'?: boolean;
    /**
     * If true, this reference points to the managing controller.
     * @type {boolean}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    'controller'?: boolean;
    /**
     * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    'kind': string;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    'name': string;
    /**
     * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    'uid': string;
}
/**
 * Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1Preconditions
 */
export interface IoK8sApimachineryPkgApisMetaV1Preconditions {
    /**
     * Specifies the target ResourceVersion
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Preconditions
     */
    'resourceVersion'?: string;
    /**
     * Specifies the target UID.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Preconditions
     */
    'uid'?: string;
}
/**
 * Status is a return value for calls that don\'t return other objects.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1Status
 */
export interface IoK8sApimachineryPkgApisMetaV1Status {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'apiVersion'?: string;
    /**
     * Suggested HTTP return code for this status, 0 if not set.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'code'?: number;
    /**
     * Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
     * @type {IoK8sApimachineryPkgApisMetaV1StatusDetails}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'details'?: IoK8sApimachineryPkgApisMetaV1StatusDetails;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'kind'?: string;
    /**
     * A human-readable description of the status of this operation.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'message'?: string;
    /**
     * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'metadata'?: IoK8sApimachineryPkgApisMetaV1ListMeta;
    /**
     * A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'reason'?: string;
    /**
     * Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    'status'?: string;
}
/**
 * StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1StatusCause
 */
export interface IoK8sApimachineryPkgApisMetaV1StatusCause {
    /**
     * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.  Examples:   \"name\" - the field \"name\" on the current resource   \"items[0].name\" - the field \"name\" on the first array entry in \"items\"
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusCause
     */
    'field'?: string;
    /**
     * A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusCause
     */
    'message'?: string;
    /**
     * A machine-readable description of the cause of the error. If this value is empty there is no information available.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusCause
     */
    'reason'?: string;
}
/**
 * StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1StatusDetails
 */
export interface IoK8sApimachineryPkgApisMetaV1StatusDetails {
    /**
     * The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
     * @type {Array<IoK8sApimachineryPkgApisMetaV1StatusCause>}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    'causes'?: Array<IoK8sApimachineryPkgApisMetaV1StatusCause>;
    /**
     * The group attribute of the resource associated with the status StatusReason.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    'group'?: string;
    /**
     * The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    'kind'?: string;
    /**
     * The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    'name'?: string;
    /**
     * If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    'retryAfterSeconds'?: number;
    /**
     * UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    'uid'?: string;
}

/**
 * KamajiClastixIoV1alpha1Api - axios parameter creator
 * @export
 */
export const KamajiClastixIoV1alpha1ApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * create a DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createKamajiClastixIoV1alpha1DataStore: async (ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'ioClastixKamajiV1alpha1DataStore' is not null or undefined
            assertParamExists('createKamajiClastixIoV1alpha1DataStore', 'ioClastixKamajiV1alpha1DataStore', ioClastixKamajiV1alpha1DataStore)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioClastixKamajiV1alpha1DataStore, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * create a TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createKamajiClastixIoV1alpha1NamespacedTenantControlPlane: async (namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('createKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'namespace', namespace)
            // verify required parameter 'ioClastixKamajiV1alpha1TenantControlPlane' is not null or undefined
            assertParamExists('createKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'ioClastixKamajiV1alpha1TenantControlPlane', ioClastixKamajiV1alpha1TenantControlPlane)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes`
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioClastixKamajiV1alpha1TenantControlPlane, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * delete collection of DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1CollectionDataStore: async (pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (allowWatchBookmarks !== undefined) {
                localVarQueryParameter['allowWatchBookmarks'] = allowWatchBookmarks;
            }

            if (_continue !== undefined) {
                localVarQueryParameter['continue'] = _continue;
            }

            if (fieldSelector !== undefined) {
                localVarQueryParameter['fieldSelector'] = fieldSelector;
            }

            if (labelSelector !== undefined) {
                localVarQueryParameter['labelSelector'] = labelSelector;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }

            if (resourceVersionMatch !== undefined) {
                localVarQueryParameter['resourceVersionMatch'] = resourceVersionMatch;
            }

            if (sendInitialEvents !== undefined) {
                localVarQueryParameter['sendInitialEvents'] = sendInitialEvents;
            }

            if (timeoutSeconds !== undefined) {
                localVarQueryParameter['timeoutSeconds'] = timeoutSeconds;
            }

            if (watch !== undefined) {
                localVarQueryParameter['watch'] = watch;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * delete collection of TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane: async (namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane', 'namespace', namespace)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes`
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (allowWatchBookmarks !== undefined) {
                localVarQueryParameter['allowWatchBookmarks'] = allowWatchBookmarks;
            }

            if (_continue !== undefined) {
                localVarQueryParameter['continue'] = _continue;
            }

            if (fieldSelector !== undefined) {
                localVarQueryParameter['fieldSelector'] = fieldSelector;
            }

            if (labelSelector !== undefined) {
                localVarQueryParameter['labelSelector'] = labelSelector;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }

            if (resourceVersionMatch !== undefined) {
                localVarQueryParameter['resourceVersionMatch'] = resourceVersionMatch;
            }

            if (sendInitialEvents !== undefined) {
                localVarQueryParameter['sendInitialEvents'] = sendInitialEvents;
            }

            if (timeoutSeconds !== undefined) {
                localVarQueryParameter['timeoutSeconds'] = timeoutSeconds;
            }

            if (watch !== undefined) {
                localVarQueryParameter['watch'] = watch;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * delete a DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
         * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
         * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
         * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1DataStore: async (name: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('deleteKamajiClastixIoV1alpha1DataStore', 'name', name)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (gracePeriodSeconds !== undefined) {
                localVarQueryParameter['gracePeriodSeconds'] = gracePeriodSeconds;
            }

            if (orphanDependents !== undefined) {
                localVarQueryParameter['orphanDependents'] = orphanDependents;
            }

            if (propagationPolicy !== undefined) {
                localVarQueryParameter['propagationPolicy'] = propagationPolicy;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioK8sApimachineryPkgApisMetaV1DeleteOptions, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * delete a TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
         * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
         * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
         * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane: async (name: string, namespace: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'namespace', namespace)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (gracePeriodSeconds !== undefined) {
                localVarQueryParameter['gracePeriodSeconds'] = gracePeriodSeconds;
            }

            if (orphanDependents !== undefined) {
                localVarQueryParameter['orphanDependents'] = orphanDependents;
            }

            if (propagationPolicy !== undefined) {
                localVarQueryParameter['propagationPolicy'] = propagationPolicy;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioK8sApimachineryPkgApisMetaV1DeleteOptions, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * list objects of kind DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listKamajiClastixIoV1alpha1DataStore: async (pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (allowWatchBookmarks !== undefined) {
                localVarQueryParameter['allowWatchBookmarks'] = allowWatchBookmarks;
            }

            if (_continue !== undefined) {
                localVarQueryParameter['continue'] = _continue;
            }

            if (fieldSelector !== undefined) {
                localVarQueryParameter['fieldSelector'] = fieldSelector;
            }

            if (labelSelector !== undefined) {
                localVarQueryParameter['labelSelector'] = labelSelector;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }

            if (resourceVersionMatch !== undefined) {
                localVarQueryParameter['resourceVersionMatch'] = resourceVersionMatch;
            }

            if (sendInitialEvents !== undefined) {
                localVarQueryParameter['sendInitialEvents'] = sendInitialEvents;
            }

            if (timeoutSeconds !== undefined) {
                localVarQueryParameter['timeoutSeconds'] = timeoutSeconds;
            }

            if (watch !== undefined) {
                localVarQueryParameter['watch'] = watch;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * list objects of kind TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listKamajiClastixIoV1alpha1NamespacedTenantControlPlane: async (namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('listKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'namespace', namespace)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes`
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (allowWatchBookmarks !== undefined) {
                localVarQueryParameter['allowWatchBookmarks'] = allowWatchBookmarks;
            }

            if (_continue !== undefined) {
                localVarQueryParameter['continue'] = _continue;
            }

            if (fieldSelector !== undefined) {
                localVarQueryParameter['fieldSelector'] = fieldSelector;
            }

            if (labelSelector !== undefined) {
                localVarQueryParameter['labelSelector'] = labelSelector;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }

            if (resourceVersionMatch !== undefined) {
                localVarQueryParameter['resourceVersionMatch'] = resourceVersionMatch;
            }

            if (sendInitialEvents !== undefined) {
                localVarQueryParameter['sendInitialEvents'] = sendInitialEvents;
            }

            if (timeoutSeconds !== undefined) {
                localVarQueryParameter['timeoutSeconds'] = timeoutSeconds;
            }

            if (watch !== undefined) {
                localVarQueryParameter['watch'] = watch;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * list objects of kind TenantControlPlane
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces: async (allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, pretty?: string, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/tenantcontrolplanes`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (allowWatchBookmarks !== undefined) {
                localVarQueryParameter['allowWatchBookmarks'] = allowWatchBookmarks;
            }

            if (_continue !== undefined) {
                localVarQueryParameter['continue'] = _continue;
            }

            if (fieldSelector !== undefined) {
                localVarQueryParameter['fieldSelector'] = fieldSelector;
            }

            if (labelSelector !== undefined) {
                localVarQueryParameter['labelSelector'] = labelSelector;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }

            if (resourceVersionMatch !== undefined) {
                localVarQueryParameter['resourceVersionMatch'] = resourceVersionMatch;
            }

            if (sendInitialEvents !== undefined) {
                localVarQueryParameter['sendInitialEvents'] = sendInitialEvents;
            }

            if (timeoutSeconds !== undefined) {
                localVarQueryParameter['timeoutSeconds'] = timeoutSeconds;
            }

            if (watch !== undefined) {
                localVarQueryParameter['watch'] = watch;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * partially update the specified DataStore
         * @param {string} name name of the DataStore
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1DataStore: async (name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1DataStore', 'name', name)
            // verify required parameter 'body' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1DataStore', 'body', body)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }

            if (force !== undefined) {
                localVarQueryParameter['force'] = force;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/apply-patch+yaml';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * partially update status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1DataStoreStatus: async (name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1DataStoreStatus', 'name', name)
            // verify required parameter 'body' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1DataStoreStatus', 'body', body)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores/{name}/status`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }

            if (force !== undefined) {
                localVarQueryParameter['force'] = force;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/apply-patch+yaml';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * partially update the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane: async (name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'namespace', namespace)
            // verify required parameter 'body' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'body', body)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }

            if (force !== undefined) {
                localVarQueryParameter['force'] = force;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/apply-patch+yaml';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * partially update scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale: async (name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'namespace', namespace)
            // verify required parameter 'body' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'body', body)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}/scale`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }

            if (force !== undefined) {
                localVarQueryParameter['force'] = force;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/apply-patch+yaml';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * partially update status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus: async (name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'namespace', namespace)
            // verify required parameter 'body' is not null or undefined
            assertParamExists('patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'body', body)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}/status`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }

            if (force !== undefined) {
                localVarQueryParameter['force'] = force;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/apply-patch+yaml';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * read the specified DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1DataStore: async (name: string, pretty?: string, resourceVersion?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1DataStore', 'name', name)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * read status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1DataStoreStatus: async (name: string, pretty?: string, resourceVersion?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1DataStoreStatus', 'name', name)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores/{name}/status`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * read the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1NamespacedTenantControlPlane: async (name: string, namespace: string, pretty?: string, resourceVersion?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'namespace', namespace)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * read scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale: async (name: string, namespace: string, pretty?: string, resourceVersion?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'namespace', namespace)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}/scale`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * read status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus: async (name: string, namespace: string, pretty?: string, resourceVersion?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'namespace', namespace)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}/status`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (resourceVersion !== undefined) {
                localVarQueryParameter['resourceVersion'] = resourceVersion;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * replace the specified DataStore
         * @param {string} name name of the DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1DataStore: async (name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1DataStore', 'name', name)
            // verify required parameter 'ioClastixKamajiV1alpha1DataStore' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1DataStore', 'ioClastixKamajiV1alpha1DataStore', ioClastixKamajiV1alpha1DataStore)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioClastixKamajiV1alpha1DataStore, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * replace status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1DataStoreStatus: async (name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1DataStoreStatus', 'name', name)
            // verify required parameter 'ioClastixKamajiV1alpha1DataStore' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1DataStoreStatus', 'ioClastixKamajiV1alpha1DataStore', ioClastixKamajiV1alpha1DataStore)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/datastores/{name}/status`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioClastixKamajiV1alpha1DataStore, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * replace the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane: async (name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'namespace', namespace)
            // verify required parameter 'ioClastixKamajiV1alpha1TenantControlPlane' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane', 'ioClastixKamajiV1alpha1TenantControlPlane', ioClastixKamajiV1alpha1TenantControlPlane)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioClastixKamajiV1alpha1TenantControlPlane, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * replace scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoK8sApiAutoscalingV1Scale} ioK8sApiAutoscalingV1Scale 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale: async (name: string, namespace: string, ioK8sApiAutoscalingV1Scale: IoK8sApiAutoscalingV1Scale, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'namespace', namespace)
            // verify required parameter 'ioK8sApiAutoscalingV1Scale' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale', 'ioK8sApiAutoscalingV1Scale', ioK8sApiAutoscalingV1Scale)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}/scale`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioK8sApiAutoscalingV1Scale, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * replace status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus: async (name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'name' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'name', name)
            // verify required parameter 'namespace' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'namespace', namespace)
            // verify required parameter 'ioClastixKamajiV1alpha1TenantControlPlane' is not null or undefined
            assertParamExists('replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus', 'ioClastixKamajiV1alpha1TenantControlPlane', ioClastixKamajiV1alpha1TenantControlPlane)
            const localVarPath = `/apis/kamaji.clastix.io/v1alpha1/namespaces/{namespace}/tenantcontrolplanes/{name}/status`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)))
                .replace(`{${"namespace"}}`, encodeURIComponent(String(namespace)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (dryRun !== undefined) {
                localVarQueryParameter['dryRun'] = dryRun;
            }

            if (fieldManager !== undefined) {
                localVarQueryParameter['fieldManager'] = fieldManager;
            }

            if (fieldValidation !== undefined) {
                localVarQueryParameter['fieldValidation'] = fieldValidation;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ioClastixKamajiV1alpha1TenantControlPlane, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * KamajiClastixIoV1alpha1Api - functional programming interface
 * @export
 */
export const KamajiClastixIoV1alpha1ApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = KamajiClastixIoV1alpha1ApiAxiosParamCreator(configuration)
    return {
        /**
         * create a DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createKamajiClastixIoV1alpha1DataStore(ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStore>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createKamajiClastixIoV1alpha1DataStore(ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.createKamajiClastixIoV1alpha1DataStore']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * create a TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.createKamajiClastixIoV1alpha1NamespacedTenantControlPlane']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * delete collection of DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteKamajiClastixIoV1alpha1CollectionDataStore(pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteKamajiClastixIoV1alpha1CollectionDataStore(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.deleteKamajiClastixIoV1alpha1CollectionDataStore']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * delete collection of TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane(namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * delete a DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
         * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
         * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
         * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteKamajiClastixIoV1alpha1DataStore(name: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteKamajiClastixIoV1alpha1DataStore(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, ioK8sApimachineryPkgApisMetaV1DeleteOptions, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.deleteKamajiClastixIoV1alpha1DataStore']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * delete a TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
         * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
         * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
         * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, ioK8sApimachineryPkgApisMetaV1DeleteOptions, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * list objects of kind DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listKamajiClastixIoV1alpha1DataStore(pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStoreList>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listKamajiClastixIoV1alpha1DataStore(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.listKamajiClastixIoV1alpha1DataStore']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * list objects of kind TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlaneList>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.listKamajiClastixIoV1alpha1NamespacedTenantControlPlane']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * list objects of kind TenantControlPlane
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces(allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, pretty?: string, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlaneList>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * partially update the specified DataStore
         * @param {string} name name of the DataStore
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchKamajiClastixIoV1alpha1DataStore(name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStore>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchKamajiClastixIoV1alpha1DataStore(name, body, pretty, dryRun, fieldManager, fieldValidation, force, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.patchKamajiClastixIoV1alpha1DataStore']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * partially update status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchKamajiClastixIoV1alpha1DataStoreStatus(name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStore>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchKamajiClastixIoV1alpha1DataStoreStatus(name, body, pretty, dryRun, fieldManager, fieldValidation, force, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.patchKamajiClastixIoV1alpha1DataStoreStatus']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * partially update the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * partially update scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoK8sApiAutoscalingV1Scale>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * partially update status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * read the specified DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async readKamajiClastixIoV1alpha1DataStore(name: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStore>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.readKamajiClastixIoV1alpha1DataStore(name, pretty, resourceVersion, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.readKamajiClastixIoV1alpha1DataStore']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * read status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async readKamajiClastixIoV1alpha1DataStoreStatus(name: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStore>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.readKamajiClastixIoV1alpha1DataStoreStatus(name, pretty, resourceVersion, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.readKamajiClastixIoV1alpha1DataStoreStatus']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * read the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async readKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.readKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, pretty, resourceVersion, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.readKamajiClastixIoV1alpha1NamespacedTenantControlPlane']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * read scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoK8sApiAutoscalingV1Scale>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, pretty, resourceVersion, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * read status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, pretty, resourceVersion, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * replace the specified DataStore
         * @param {string} name name of the DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async replaceKamajiClastixIoV1alpha1DataStore(name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStore>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.replaceKamajiClastixIoV1alpha1DataStore(name, ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.replaceKamajiClastixIoV1alpha1DataStore']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * replace status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async replaceKamajiClastixIoV1alpha1DataStoreStatus(name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1DataStore>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.replaceKamajiClastixIoV1alpha1DataStoreStatus(name, ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.replaceKamajiClastixIoV1alpha1DataStoreStatus']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * replace the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * replace scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoK8sApiAutoscalingV1Scale} ioK8sApiAutoscalingV1Scale 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, ioK8sApiAutoscalingV1Scale: IoK8sApiAutoscalingV1Scale, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoK8sApiAutoscalingV1Scale>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, ioK8sApiAutoscalingV1Scale, pretty, dryRun, fieldManager, fieldValidation, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * replace status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['KamajiClastixIoV1alpha1Api.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * KamajiClastixIoV1alpha1Api - factory interface
 * @export
 */
export const KamajiClastixIoV1alpha1ApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = KamajiClastixIoV1alpha1ApiFp(configuration)
    return {
        /**
         * create a DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createKamajiClastixIoV1alpha1DataStore(ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStore> {
            return localVarFp.createKamajiClastixIoV1alpha1DataStore(ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(axios, basePath));
        },
        /**
         * create a TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane> {
            return localVarFp.createKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(axios, basePath));
        },
        /**
         * delete collection of DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1CollectionDataStore(pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status> {
            return localVarFp.deleteKamajiClastixIoV1alpha1CollectionDataStore(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(axios, basePath));
        },
        /**
         * delete collection of TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane(namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status> {
            return localVarFp.deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(axios, basePath));
        },
        /**
         * delete a DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
         * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
         * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
         * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1DataStore(name: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options?: RawAxiosRequestConfig): AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status> {
            return localVarFp.deleteKamajiClastixIoV1alpha1DataStore(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, ioK8sApimachineryPkgApisMetaV1DeleteOptions, options).then((request) => request(axios, basePath));
        },
        /**
         * delete a TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
         * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
         * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
         * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options?: RawAxiosRequestConfig): AxiosPromise<IoK8sApimachineryPkgApisMetaV1Status> {
            return localVarFp.deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, ioK8sApimachineryPkgApisMetaV1DeleteOptions, options).then((request) => request(axios, basePath));
        },
        /**
         * list objects of kind DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listKamajiClastixIoV1alpha1DataStore(pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStoreList> {
            return localVarFp.listKamajiClastixIoV1alpha1DataStore(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(axios, basePath));
        },
        /**
         * list objects of kind TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlaneList> {
            return localVarFp.listKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(axios, basePath));
        },
        /**
         * list objects of kind TenantControlPlane
         * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
         * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
         * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
         * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
         * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
         * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
         * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces(allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, pretty?: string, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlaneList> {
            return localVarFp.listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(axios, basePath));
        },
        /**
         * partially update the specified DataStore
         * @param {string} name name of the DataStore
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1DataStore(name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStore> {
            return localVarFp.patchKamajiClastixIoV1alpha1DataStore(name, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(axios, basePath));
        },
        /**
         * partially update status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1DataStoreStatus(name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStore> {
            return localVarFp.patchKamajiClastixIoV1alpha1DataStoreStatus(name, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(axios, basePath));
        },
        /**
         * partially update the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane> {
            return localVarFp.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(axios, basePath));
        },
        /**
         * partially update scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoK8sApiAutoscalingV1Scale> {
            return localVarFp.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(axios, basePath));
        },
        /**
         * partially update status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {object} body 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane> {
            return localVarFp.patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(axios, basePath));
        },
        /**
         * read the specified DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1DataStore(name: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStore> {
            return localVarFp.readKamajiClastixIoV1alpha1DataStore(name, pretty, resourceVersion, options).then((request) => request(axios, basePath));
        },
        /**
         * read status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1DataStoreStatus(name: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStore> {
            return localVarFp.readKamajiClastixIoV1alpha1DataStoreStatus(name, pretty, resourceVersion, options).then((request) => request(axios, basePath));
        },
        /**
         * read the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane> {
            return localVarFp.readKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, pretty, resourceVersion, options).then((request) => request(axios, basePath));
        },
        /**
         * read scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoK8sApiAutoscalingV1Scale> {
            return localVarFp.readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, pretty, resourceVersion, options).then((request) => request(axios, basePath));
        },
        /**
         * read status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane> {
            return localVarFp.readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, pretty, resourceVersion, options).then((request) => request(axios, basePath));
        },
        /**
         * replace the specified DataStore
         * @param {string} name name of the DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1DataStore(name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStore> {
            return localVarFp.replaceKamajiClastixIoV1alpha1DataStore(name, ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(axios, basePath));
        },
        /**
         * replace status of the specified DataStore
         * @param {string} name name of the DataStore
         * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1DataStoreStatus(name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1DataStore> {
            return localVarFp.replaceKamajiClastixIoV1alpha1DataStoreStatus(name, ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(axios, basePath));
        },
        /**
         * replace the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane> {
            return localVarFp.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(axios, basePath));
        },
        /**
         * replace scale of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoK8sApiAutoscalingV1Scale} ioK8sApiAutoscalingV1Scale 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, ioK8sApiAutoscalingV1Scale: IoK8sApiAutoscalingV1Scale, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoK8sApiAutoscalingV1Scale> {
            return localVarFp.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, ioK8sApiAutoscalingV1Scale, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(axios, basePath));
        },
        /**
         * replace status of the specified TenantControlPlane
         * @param {string} name name of the TenantControlPlane
         * @param {string} namespace object name and auth scope, such as for teams and projects
         * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
         * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
         * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
         * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
         * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig): AxiosPromise<IoClastixKamajiV1alpha1TenantControlPlane> {
            return localVarFp.replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * KamajiClastixIoV1alpha1Api - object-oriented interface
 * @export
 * @class KamajiClastixIoV1alpha1Api
 * @extends {BaseAPI}
 */
export class KamajiClastixIoV1alpha1Api extends BaseAPI {
    /**
     * create a DataStore
     * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public createKamajiClastixIoV1alpha1DataStore(ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).createKamajiClastixIoV1alpha1DataStore(ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * create a TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public createKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).createKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * delete collection of DataStore
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
     * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public deleteKamajiClastixIoV1alpha1CollectionDataStore(pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).deleteKamajiClastixIoV1alpha1CollectionDataStore(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * delete collection of TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
     * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane(namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).deleteKamajiClastixIoV1alpha1CollectionNamespacedTenantControlPlane(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * delete a DataStore
     * @param {string} name name of the DataStore
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public deleteKamajiClastixIoV1alpha1DataStore(name: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).deleteKamajiClastixIoV1alpha1DataStore(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, ioK8sApimachineryPkgApisMetaV1DeleteOptions, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * delete a TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {number} [gracePeriodSeconds] The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {boolean} [orphanDependents] Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {string} [propagationPolicy] Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \&#39;Orphan\&#39; - orphan the dependents; \&#39;Background\&#39; - allow the garbage collector to delete the dependents in the background; \&#39;Foreground\&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {IoK8sApimachineryPkgApisMetaV1DeleteOptions} [ioK8sApimachineryPkgApisMetaV1DeleteOptions] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, pretty?: string, dryRun?: string, gracePeriodSeconds?: number, orphanDependents?: boolean, propagationPolicy?: string, ioK8sApimachineryPkgApisMetaV1DeleteOptions?: IoK8sApimachineryPkgApisMetaV1DeleteOptions, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).deleteKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, ioK8sApimachineryPkgApisMetaV1DeleteOptions, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * list objects of kind DataStore
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
     * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public listKamajiClastixIoV1alpha1DataStore(pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).listKamajiClastixIoV1alpha1DataStore(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * list objects of kind TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
     * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public listKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace: string, pretty?: string, allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).listKamajiClastixIoV1alpha1NamespacedTenantControlPlane(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * list objects of kind TenantControlPlane
     * @param {boolean} [allowWatchBookmarks] allowWatchBookmarks requests watch events with type \&quot;BOOKMARK\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     * @param {string} [_continue] The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \&quot;next key\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {string} [fieldSelector] A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {string} [labelSelector] A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {number} [limit] limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {string} [resourceVersionMatch] resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {boolean} [sendInitialEvents] &#x60;sendInitialEvents&#x3D;true&#x60; may be set together with &#x60;watch&#x3D;true&#x60;. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \&quot;Bookmark\&quot; event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with &#x60;\&quot;k8s.io/initial-events-end\&quot;: \&quot;true\&quot;&#x60; annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When &#x60;sendInitialEvents&#x60; option is set, we require &#x60;resourceVersionMatch&#x60; option to also be set. The semantic of the watch request is as following: - &#x60;resourceVersionMatch&#x60; &#x3D; NotOlderThan   is interpreted as \&quot;data at least as new as the provided &#x60;resourceVersion&#x60;\&quot;   and the bookmark event is send when the state is synced   to a &#x60;resourceVersion&#x60; at least as fresh as the one provided by the ListOptions.   If &#x60;resourceVersion&#x60; is unset, this is interpreted as \&quot;consistent read\&quot; and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - &#x60;resourceVersionMatch&#x60; set to any other value or unset   Invalid error is returned.  Defaults to true if &#x60;resourceVersion&#x3D;\&quot;\&quot;&#x60; or &#x60;resourceVersion&#x3D;\&quot;0\&quot;&#x60; (for backward compatibility reasons) and to false otherwise.
     * @param {number} [timeoutSeconds] Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {boolean} [watch] Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces(allowWatchBookmarks?: boolean, _continue?: string, fieldSelector?: string, labelSelector?: string, limit?: number, pretty?: string, resourceVersion?: string, resourceVersionMatch?: string, sendInitialEvents?: boolean, timeoutSeconds?: number, watch?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).listKamajiClastixIoV1alpha1TenantControlPlaneForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, resourceVersionMatch, sendInitialEvents, timeoutSeconds, watch, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * partially update the specified DataStore
     * @param {string} name name of the DataStore
     * @param {object} body 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public patchKamajiClastixIoV1alpha1DataStore(name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).patchKamajiClastixIoV1alpha1DataStore(name, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * partially update status of the specified DataStore
     * @param {string} name name of the DataStore
     * @param {object} body 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public patchKamajiClastixIoV1alpha1DataStoreStatus(name: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).patchKamajiClastixIoV1alpha1DataStoreStatus(name, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * partially update the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {object} body 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).patchKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * partially update scale of the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {object} body 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * partially update status of the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {object} body 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {boolean} [force] Force is going to \&quot;force\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, body: object, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, force?: boolean, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).patchKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, body, pretty, dryRun, fieldManager, fieldValidation, force, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * read the specified DataStore
     * @param {string} name name of the DataStore
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public readKamajiClastixIoV1alpha1DataStore(name: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).readKamajiClastixIoV1alpha1DataStore(name, pretty, resourceVersion, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * read status of the specified DataStore
     * @param {string} name name of the DataStore
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public readKamajiClastixIoV1alpha1DataStoreStatus(name: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).readKamajiClastixIoV1alpha1DataStoreStatus(name, pretty, resourceVersion, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * read the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public readKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).readKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, pretty, resourceVersion, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * read scale of the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, pretty, resourceVersion, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * read status of the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [resourceVersion] resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, pretty?: string, resourceVersion?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).readKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, pretty, resourceVersion, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * replace the specified DataStore
     * @param {string} name name of the DataStore
     * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public replaceKamajiClastixIoV1alpha1DataStore(name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).replaceKamajiClastixIoV1alpha1DataStore(name, ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * replace status of the specified DataStore
     * @param {string} name name of the DataStore
     * @param {IoClastixKamajiV1alpha1DataStore} ioClastixKamajiV1alpha1DataStore 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public replaceKamajiClastixIoV1alpha1DataStoreStatus(name: string, ioClastixKamajiV1alpha1DataStore: IoClastixKamajiV1alpha1DataStore, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).replaceKamajiClastixIoV1alpha1DataStoreStatus(name, ioClastixKamajiV1alpha1DataStore, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * replace the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlane(name, namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * replace scale of the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {IoK8sApiAutoscalingV1Scale} ioK8sApiAutoscalingV1Scale 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name: string, namespace: string, ioK8sApiAutoscalingV1Scale: IoK8sApiAutoscalingV1Scale, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneScale(name, namespace, ioK8sApiAutoscalingV1Scale, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * replace status of the specified TenantControlPlane
     * @param {string} name name of the TenantControlPlane
     * @param {string} namespace object name and auth scope, such as for teams and projects
     * @param {IoClastixKamajiV1alpha1TenantControlPlane} ioClastixKamajiV1alpha1TenantControlPlane 
     * @param {string} [pretty] If \&#39;true\&#39;, then the output is pretty printed. Defaults to \&#39;false\&#39; unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     * @param {string} [dryRun] When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @param {string} [fieldManager] fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     * @param {string} [fieldValidation] fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KamajiClastixIoV1alpha1Api
     */
    public replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name: string, namespace: string, ioClastixKamajiV1alpha1TenantControlPlane: IoClastixKamajiV1alpha1TenantControlPlane, pretty?: string, dryRun?: string, fieldManager?: string, fieldValidation?: string, options?: RawAxiosRequestConfig) {
        return KamajiClastixIoV1alpha1ApiFp(this.configuration).replaceKamajiClastixIoV1alpha1NamespacedTenantControlPlaneStatus(name, namespace, ioClastixKamajiV1alpha1TenantControlPlane, pretty, dryRun, fieldManager, fieldValidation, options).then((request) => request(this.axios, this.basePath));
    }
}



